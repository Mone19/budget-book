* 
* ==> Audit <==
* |------------|---------------------|----------|------------|---------|---------------------|---------------------|
|  Command   |        Args         | Profile  |    User    | Version |     Start Time      |      End Time       |
|------------|---------------------|----------|------------|---------|---------------------|---------------------|
| start      |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 15:09 CET | 12 Feb 24 15:11 CET |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 15:16 CET |                     |
| service    | nginx-deployment    | minikube | MONE\simon | v1.32.0 | 12 Feb 24 17:12 CET |                     |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 17:25 CET |                     |
| start      |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 17:29 CET | 12 Feb 24 17:30 CET |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 17:44 CET |                     |
| docker-env |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 18:03 CET | 12 Feb 24 18:03 CET |
| docker-env |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 18:04 CET | 12 Feb 24 18:04 CET |
| ssh        |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 18:52 CET |                     |
| service    | angular-app-service | minikube | MONE\simon | v1.32.0 | 12 Feb 24 19:13 CET |                     |
| addons     | enable ingress      | minikube | MONE\simon | v1.32.0 | 12 Feb 24 19:27 CET | 12 Feb 24 19:27 CET |
| service    | angular-app-service | minikube | MONE\simon | v1.32.0 | 12 Feb 24 19:31 CET |                     |
| ip         |                     | minikube | MONE\simon | v1.32.0 | 12 Feb 24 19:47 CET | 12 Feb 24 19:47 CET |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:40 CET |                     |
| start      |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:44 CET | 19 Feb 24 21:47 CET |
| delete     |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:49 CET | 19 Feb 24 21:49 CET |
| config     | set driver docker   | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:50 CET | 19 Feb 24 21:50 CET |
| start      | --driver=docker     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:50 CET | 19 Feb 24 21:51 CET |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:51 CET |                     |
| dashboard  |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 21:57 CET |                     |
| docker-env |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:06 CET | 19 Feb 24 22:06 CET |
| docker-env |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:07 CET | 19 Feb 24 22:07 CET |
| docker-env |                     | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:09 CET | 19 Feb 24 22:09 CET |
| docker-env | minikube docker-env | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:10 CET | 19 Feb 24 22:10 CET |
| docker-env | minikube docker-env | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:11 CET | 19 Feb 24 22:11 CET |
| service    | frontend-service    | minikube | MONE\simon | v1.32.0 | 19 Feb 24 22:46 CET |                     |
|------------|---------------------|----------|------------|---------|---------------------|---------------------|

* 
* ==> Last Start <==
* Log file created at: 2024/02/19 21:50:55
Running on machine: Mone
Binary: Built with gc go1.21.3 for windows/amd64
Log line format: [IWEF]mmdd hh:mm:ss.uuuuuu threadid file:line] msg
I0219 21:50:55.019153   12244 out.go:296] Setting OutFile to fd 104 ...
I0219 21:50:55.019674   12244 out.go:348] isatty.IsTerminal(104) = true
I0219 21:50:55.019674   12244 out.go:309] Setting ErrFile to fd 108...
I0219 21:50:55.019674   12244 out.go:348] isatty.IsTerminal(108) = true
I0219 21:50:55.038952   12244 out.go:303] Setting JSON to false
I0219 21:50:55.043556   12244 start.go:128] hostinfo: {"hostname":"Mone","uptime":273589,"bootTime":1708102265,"procs":365,"os":"windows","platform":"Microsoft Windows 11 Pro","platformFamily":"Standalone Workstation","platformVersion":"10.0.22631.3155 Build 22631.3155","kernelVersion":"10.0.22631.3155 Build 22631.3155","kernelArch":"x86_64","virtualizationSystem":"","virtualizationRole":"","hostId":"948a620e-923b-4f07-8811-7890cf1800b6"}
W0219 21:50:55.043556   12244 start.go:136] gopshost.Virtualization returned error: not implemented yet
I0219 21:50:55.046770   12244 out.go:177] 😄  minikube v1.32.0 on Microsoft Windows 11 Pro 10.0.22631.3155 Build 22631.3155
I0219 21:50:55.047801   12244 notify.go:220] Checking for updates...
I0219 21:50:55.048329   12244 driver.go:378] Setting default libvirt URI to qemu:///system
I0219 21:50:55.223120   12244 docker.go:122] docker version: linux-25.0.3:Docker Desktop 4.27.2 (137060)
I0219 21:50:55.232647   12244 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0219 21:50:55.516661   12244 info.go:266] docker info: {ID:ac6358b6-3ae2-42a3-b48d-4fe09bfd149f Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:55 OomKillDisable:true NGoroutines:103 SystemTime:2024-02-19 20:50:55.474911398 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:20 KernelVersion:5.15.133.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8161222656 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.5-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.21] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.4.1]] Warnings:<nil>}}
I0219 21:50:55.518930   12244 out.go:177] ✨  Using the docker driver based on user configuration
I0219 21:50:55.520005   12244 start.go:298] selected driver: docker
I0219 21:50:55.520005   12244 start.go:902] validating driver "docker" against <nil>
I0219 21:50:55.520005   12244 start.go:913] status for docker: {Installed:true Healthy:true Running:false NeedsImprovement:false Error:<nil> Reason: Fix: Doc: Version:}
I0219 21:50:55.533126   12244 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0219 21:50:55.792754   12244 info.go:266] docker info: {ID:ac6358b6-3ae2-42a3-b48d-4fe09bfd149f Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:55 OomKillDisable:true NGoroutines:103 SystemTime:2024-02-19 20:50:55.752840035 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:20 KernelVersion:5.15.133.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8161222656 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.5-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.21] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.4.1]] Warnings:<nil>}}
I0219 21:50:55.792754   12244 start_flags.go:309] no existing cluster config was found, will generate one from the flags 
I0219 21:50:55.839607   12244 start_flags.go:394] Using suggested 4000MB memory alloc based on sys=16059MB, container=7783MB
I0219 21:50:55.840114   12244 start_flags.go:913] Wait components to verify : map[apiserver:true system_pods:true]
I0219 21:50:55.840114   12244 out.go:177] 📌  Using Docker Desktop driver with root privileges
I0219 21:50:55.841187   12244 cni.go:84] Creating CNI manager for ""
I0219 21:50:55.841187   12244 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0219 21:50:55.841187   12244 start_flags.go:318] Found "bridge CNI" CNI - setting NetworkPlugin=cni
I0219 21:50:55.841187   12244 start_flags.go:323] config:
{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\simon:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0219 21:50:55.841775   12244 out.go:177] 👍  Starting control plane node minikube in cluster minikube
I0219 21:50:55.842279   12244 cache.go:121] Beginning downloading kic base image for docker with docker
I0219 21:50:55.842794   12244 out.go:177] 🚜  Pulling base image ...
I0219 21:50:55.842794   12244 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0219 21:50:55.842794   12244 image.go:79] Checking for gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon
I0219 21:50:55.842794   12244 preload.go:148] Found local preload: C:\Users\simon\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4
I0219 21:50:55.842794   12244 cache.go:56] Caching tarball of preloaded images
I0219 21:50:55.843312   12244 preload.go:174] Found C:\Users\simon\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4 in cache, skipping download
I0219 21:50:55.843312   12244 cache.go:59] Finished verifying existence of preloaded tar for  v1.28.3 on docker
I0219 21:50:55.843830   12244 profile.go:148] Saving config to C:\Users\simon\.minikube\profiles\minikube\config.json ...
I0219 21:50:55.843830   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\config.json: {Name:mkec0a80668f3465eca61c670e77d2e9c0f06960 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:50:55.977481   12244 image.go:83] Found gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 in local docker daemon, skipping pull
I0219 21:50:55.977481   12244 cache.go:144] gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 exists in daemon, skipping load
I0219 21:50:55.977663   12244 cache.go:194] Successfully downloaded all kic artifacts
I0219 21:50:55.977663   12244 start.go:365] acquiring machines lock for minikube: {Name:mk10dc56b057e28931d5f7e742de8d3fad3c8d75 Clock:{} Delay:500ms Timeout:10m0s Cancel:<nil>}
I0219 21:50:55.977663   12244 start.go:369] acquired machines lock for "minikube" in 0s
I0219 21:50:55.977663   12244 start.go:93] Provisioning new machine with config: &{Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP: Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\simon:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:} &{Name: IP: Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0219 21:50:55.977663   12244 start.go:125] createHost starting for "" (driver="docker")
I0219 21:50:55.979379   12244 out.go:204] 🔥  Creating docker container (CPUs=2, Memory=4000MB) ...
I0219 21:50:55.979379   12244 start.go:159] libmachine.API.Create for "minikube" (driver="docker")
I0219 21:50:55.979379   12244 client.go:168] LocalClient.Create starting
I0219 21:50:55.979889   12244 main.go:141] libmachine: Reading certificate data from C:\Users\simon\.minikube\certs\ca.pem
I0219 21:50:55.979889   12244 main.go:141] libmachine: Decoding PEM data...
I0219 21:50:55.979889   12244 main.go:141] libmachine: Parsing certificate...
I0219 21:50:55.980401   12244 main.go:141] libmachine: Reading certificate data from C:\Users\simon\.minikube\certs\cert.pem
I0219 21:50:55.980401   12244 main.go:141] libmachine: Decoding PEM data...
I0219 21:50:55.980401   12244 main.go:141] libmachine: Parsing certificate...
I0219 21:50:55.986282   12244 cli_runner.go:164] Run: docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
W0219 21:50:56.100969   12244 cli_runner.go:211] docker network inspect minikube --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}" returned with exit code 1
I0219 21:50:56.110014   12244 network_create.go:281] running [docker network inspect minikube] to gather additional debugging logs...
I0219 21:50:56.110014   12244 cli_runner.go:164] Run: docker network inspect minikube
W0219 21:50:56.238599   12244 cli_runner.go:211] docker network inspect minikube returned with exit code 1
I0219 21:50:56.238599   12244 network_create.go:284] error running [docker network inspect minikube]: docker network inspect minikube: exit status 1
stdout:
[]

stderr:
Error response from daemon: network minikube not found
I0219 21:50:56.238599   12244 network_create.go:286] output of [docker network inspect minikube]: -- stdout --
[]

-- /stdout --
** stderr ** 
Error response from daemon: network minikube not found

** /stderr **
I0219 21:50:56.246276   12244 cli_runner.go:164] Run: docker network inspect bridge --format "{"Name": "{{.Name}}","Driver": "{{.Driver}}","Subnet": "{{range .IPAM.Config}}{{.Subnet}}{{end}}","Gateway": "{{range .IPAM.Config}}{{.Gateway}}{{end}}","MTU": {{if (index .Options "com.docker.network.driver.mtu")}}{{(index .Options "com.docker.network.driver.mtu")}}{{else}}0{{end}}, "ContainerIPs": [{{range $k,$v := .Containers }}"{{$v.IPv4Address}}",{{end}}]}"
I0219 21:50:56.450304   12244 network.go:209] using free private subnet 192.168.49.0/24: &{IP:192.168.49.0 Netmask:255.255.255.0 Prefix:24 CIDR:192.168.49.0/24 Gateway:192.168.49.1 ClientMin:192.168.49.2 ClientMax:192.168.49.254 Broadcast:192.168.49.255 IsPrivate:true Interface:{IfaceName: IfaceIPv4: IfaceMTU:0 IfaceMAC:} reservation:0xc0023fe4b0}
I0219 21:50:56.450304   12244 network_create.go:124] attempt to create docker network minikube 192.168.49.0/24 with gateway 192.168.49.1 and MTU of 1500 ...
I0219 21:50:56.454335   12244 cli_runner.go:164] Run: docker network create --driver=bridge --subnet=192.168.49.0/24 --gateway=192.168.49.1 -o --ip-masq -o --icc -o com.docker.network.driver.mtu=1500 --label=created_by.minikube.sigs.k8s.io=true --label=name.minikube.sigs.k8s.io=minikube minikube
I0219 21:50:56.591377   12244 network_create.go:108] docker network minikube 192.168.49.0/24 created
I0219 21:50:56.591377   12244 kic.go:121] calculated static IP "192.168.49.2" for the "minikube" container
I0219 21:50:56.604393   12244 cli_runner.go:164] Run: docker ps -a --format {{.Names}}
I0219 21:50:56.734500   12244 cli_runner.go:164] Run: docker volume create minikube --label name.minikube.sigs.k8s.io=minikube --label created_by.minikube.sigs.k8s.io=true
I0219 21:50:56.853621   12244 oci.go:103] Successfully created a docker volume minikube
I0219 21:50:56.857919   12244 cli_runner.go:164] Run: docker run --rm --name minikube-preload-sidecar --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --entrypoint /usr/bin/test -v minikube:/var gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -d /var/lib
I0219 21:50:57.772166   12244 oci.go:107] Successfully prepared a docker volume minikube
I0219 21:50:57.772166   12244 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0219 21:50:57.772166   12244 kic.go:194] Starting extracting preloaded images to volume ...
I0219 21:50:57.778601   12244 cli_runner.go:164] Run: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\simon\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir
I0219 21:51:05.719126   12244 cli_runner.go:217] Completed: docker run --rm --entrypoint /usr/bin/tar -v C:\Users\simon\.minikube\cache\preloaded-tarball\preloaded-images-k8s-v18-v1.28.3-docker-overlay2-amd64.tar.lz4:/preloaded.tar:ro -v minikube:/extractDir gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 -I lz4 -xf /preloaded.tar -C /extractDir: (7.9405253s)
I0219 21:51:05.719126   12244 kic.go:203] duration metric: took 7.946960 seconds to extract preloaded images to volume
I0219 21:51:05.729477   12244 cli_runner.go:164] Run: docker system info --format "{{json .}}"
I0219 21:51:05.994979   12244 info.go:266] docker info: {ID:ac6358b6-3ae2-42a3-b48d-4fe09bfd149f Containers:0 ContainersRunning:0 ContainersPaused:0 ContainersStopped:0 Images:1 Driver:overlay2 DriverStatus:[[Backing Filesystem extfs] [Supports d_type true] [Using metacopy false] [Native Overlay Diff true] [userxattr false]] SystemStatus:<nil> Plugins:{Volume:[local] Network:[bridge host ipvlan macvlan null overlay] Authorization:<nil> Log:[awslogs fluentd gcplogs gelf journald json-file local splunk syslog]} MemoryLimit:true SwapLimit:true KernelMemory:false KernelMemoryTCP:true CPUCfsPeriod:true CPUCfsQuota:true CPUShares:true CPUSet:true PidsLimit:true IPv4Forwarding:true BridgeNfIptables:true BridgeNfIP6Tables:true Debug:false NFd:57 OomKillDisable:true NGoroutines:103 SystemTime:2024-02-19 20:51:05.954421797 +0000 UTC LoggingDriver:json-file CgroupDriver:cgroupfs NEventsListener:20 KernelVersion:5.15.133.1-microsoft-standard-WSL2 OperatingSystem:Docker Desktop OSType:linux Architecture:x86_64 IndexServerAddress:https://index.docker.io/v1/ RegistryConfig:{AllowNondistributableArtifactsCIDRs:[] AllowNondistributableArtifactsHostnames:[] InsecureRegistryCIDRs:[127.0.0.0/8] IndexConfigs:{DockerIo:{Name:docker.io Mirrors:[] Secure:true Official:true}} Mirrors:[]} NCPU:12 MemTotal:8161222656 GenericResources:<nil> DockerRootDir:/var/lib/docker HTTPProxy:http.docker.internal:3128 HTTPSProxy:http.docker.internal:3128 NoProxy:hubproxy.docker.internal Name:docker-desktop Labels:[] ExperimentalBuild:false ServerVersion:25.0.3 ClusterStore: ClusterAdvertise: Runtimes:{Runc:{Path:runc}} DefaultRuntime:runc Swarm:{NodeID: NodeAddr: LocalNodeState:inactive ControlAvailable:false Error: RemoteManagers:<nil>} LiveRestoreEnabled:false Isolation: InitBinary:docker-init ContainerdCommit:{ID:ae07eda36dd25f8a1b98dfbf587313b99c0190bb Expected:ae07eda36dd25f8a1b98dfbf587313b99c0190bb} RuncCommit:{ID:v1.1.12-0-g51d5e94 Expected:v1.1.12-0-g51d5e94} InitCommit:{ID:de40ad0 Expected:de40ad0} SecurityOptions:[name=seccomp,profile=unconfined] ProductLicense: Warnings:[WARNING: No blkio throttle.read_bps_device support WARNING: No blkio throttle.write_bps_device support WARNING: No blkio throttle.read_iops_device support WARNING: No blkio throttle.write_iops_device support WARNING: daemon is not using the default seccomp profile] ServerErrors:[] ClientInfo:{Debug:false Plugins:[map[Name:buildx Path:C:\Program Files\Docker\cli-plugins\docker-buildx.exe SchemaVersion:0.1.0 ShortDescription:Docker Buildx Vendor:Docker Inc. Version:v0.12.1-desktop.4] map[Name:compose Path:C:\Program Files\Docker\cli-plugins\docker-compose.exe SchemaVersion:0.1.0 ShortDescription:Docker Compose Vendor:Docker Inc. Version:v2.24.5-desktop.1] map[Name:debug Path:C:\Program Files\Docker\cli-plugins\docker-debug.exe SchemaVersion:0.1.0 ShortDescription:Get a shell into any image or container. Vendor:Docker Inc. Version:0.0.24] map[Name:dev Path:C:\Program Files\Docker\cli-plugins\docker-dev.exe SchemaVersion:0.1.0 ShortDescription:Docker Dev Environments Vendor:Docker Inc. Version:v0.1.0] map[Name:extension Path:C:\Program Files\Docker\cli-plugins\docker-extension.exe SchemaVersion:0.1.0 ShortDescription:Manages Docker extensions Vendor:Docker Inc. Version:v0.2.21] map[Name:feedback Path:C:\Program Files\Docker\cli-plugins\docker-feedback.exe SchemaVersion:0.1.0 ShortDescription:Provide feedback, right in your terminal! Vendor:Docker Inc. Version:v1.0.4] map[Name:init Path:C:\Program Files\Docker\cli-plugins\docker-init.exe SchemaVersion:0.1.0 ShortDescription:Creates Docker-related starter files for your project Vendor:Docker Inc. Version:v1.0.0] map[Name:sbom Path:C:\Program Files\Docker\cli-plugins\docker-sbom.exe SchemaVersion:0.1.0 ShortDescription:View the packaged-based Software Bill Of Materials (SBOM) for an image URL:https://github.com/docker/sbom-cli-plugin Vendor:Anchore Inc. Version:0.6.0] map[Name:scout Path:C:\Program Files\Docker\cli-plugins\docker-scout.exe SchemaVersion:0.1.0 ShortDescription:Docker Scout Vendor:Docker Inc. Version:v1.4.1]] Warnings:<nil>}}
I0219 21:51:06.007136   12244 cli_runner.go:164] Run: docker info --format "'{{json .SecurityOptions}}'"
I0219 21:51:06.305160   12244 cli_runner.go:164] Run: docker run -d -t --privileged --security-opt seccomp=unconfined --tmpfs /tmp --tmpfs /run -v /lib/modules:/lib/modules:ro --hostname minikube --name minikube --label created_by.minikube.sigs.k8s.io=true --label name.minikube.sigs.k8s.io=minikube --label role.minikube.sigs.k8s.io= --label mode.minikube.sigs.k8s.io=minikube --network minikube --ip 192.168.49.2 --volume minikube:/var --security-opt apparmor=unconfined --memory=4000mb --memory-swap=4000mb --cpus=2 -e container=docker --expose 8443 --publish=127.0.0.1::8443 --publish=127.0.0.1::22 --publish=127.0.0.1::2376 --publish=127.0.0.1::5000 --publish=127.0.0.1::32443 gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0
I0219 21:51:06.792720   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Running}}
I0219 21:51:06.945617   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:07.094955   12244 cli_runner.go:164] Run: docker exec minikube stat /var/lib/dpkg/alternatives/iptables
I0219 21:51:07.275725   12244 oci.go:144] the created container "minikube" has a running status.
I0219 21:51:07.275725   12244 kic.go:225] Creating ssh key for kic: C:\Users\simon\.minikube\machines\minikube\id_rsa...
I0219 21:51:07.387109   12244 kic_runner.go:191] docker (temp): C:\Users\simon\.minikube\machines\minikube\id_rsa.pub --> /home/docker/.ssh/authorized_keys (381 bytes)
I0219 21:51:07.561784   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:07.707937   12244 kic_runner.go:93] Run: chown docker:docker /home/docker/.ssh/authorized_keys
I0219 21:51:07.707937   12244 kic_runner.go:114] Args: [docker exec --privileged minikube chown docker:docker /home/docker/.ssh/authorized_keys]
I0219 21:51:07.878830   12244 kic.go:265] ensuring only current user has permissions to key file located at : C:\Users\simon\.minikube\machines\minikube\id_rsa...
I0219 21:51:08.236715   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:08.355720   12244 machine.go:88] provisioning docker machine ...
I0219 21:51:08.355720   12244 ubuntu.go:169] provisioning hostname "minikube"
I0219 21:51:08.370334   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:08.481524   12244 main.go:141] libmachine: Using SSH client type: native
I0219 21:51:08.498784   12244 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xb647e0] 0xb67320 <nil>  [] 0s} 127.0.0.1 55998 <nil> <nil>}
I0219 21:51:08.498784   12244 main.go:141] libmachine: About to run SSH command:
sudo hostname minikube && echo "minikube" | sudo tee /etc/hostname
I0219 21:51:08.656417   12244 main.go:141] libmachine: SSH cmd err, output: <nil>: minikube

I0219 21:51:08.660792   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:08.778295   12244 main.go:141] libmachine: Using SSH client type: native
I0219 21:51:08.778860   12244 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xb647e0] 0xb67320 <nil>  [] 0s} 127.0.0.1 55998 <nil> <nil>}
I0219 21:51:08.778860   12244 main.go:141] libmachine: About to run SSH command:

		if ! grep -xq '.*\sminikube' /etc/hosts; then
			if grep -xq '127.0.1.1\s.*' /etc/hosts; then
				sudo sed -i 's/^127.0.1.1\s.*/127.0.1.1 minikube/g' /etc/hosts;
			else 
				echo '127.0.1.1 minikube' | sudo tee -a /etc/hosts; 
			fi
		fi
I0219 21:51:08.914054   12244 main.go:141] libmachine: SSH cmd err, output: <nil>: 
I0219 21:51:08.914054   12244 ubuntu.go:175] set auth options {CertDir:C:\Users\simon\.minikube CaCertPath:C:\Users\simon\.minikube\certs\ca.pem CaPrivateKeyPath:C:\Users\simon\.minikube\certs\ca-key.pem CaCertRemotePath:/etc/docker/ca.pem ServerCertPath:C:\Users\simon\.minikube\machines\server.pem ServerKeyPath:C:\Users\simon\.minikube\machines\server-key.pem ClientKeyPath:C:\Users\simon\.minikube\certs\key.pem ServerCertRemotePath:/etc/docker/server.pem ServerKeyRemotePath:/etc/docker/server-key.pem ClientCertPath:C:\Users\simon\.minikube\certs\cert.pem ServerCertSANs:[] StorePath:C:\Users\simon\.minikube}
I0219 21:51:08.914054   12244 ubuntu.go:177] setting up certificates
I0219 21:51:08.914054   12244 provision.go:83] configureAuth start
I0219 21:51:08.926310   12244 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0219 21:51:09.048259   12244 provision.go:138] copyHostCerts
I0219 21:51:09.048941   12244 exec_runner.go:144] found C:\Users\simon\.minikube/cert.pem, removing ...
I0219 21:51:09.048941   12244 exec_runner.go:203] rm: C:\Users\simon\.minikube\cert.pem
I0219 21:51:09.048941   12244 exec_runner.go:151] cp: C:\Users\simon\.minikube\certs\cert.pem --> C:\Users\simon\.minikube/cert.pem (1119 bytes)
I0219 21:51:09.050054   12244 exec_runner.go:144] found C:\Users\simon\.minikube/key.pem, removing ...
I0219 21:51:09.050054   12244 exec_runner.go:203] rm: C:\Users\simon\.minikube\key.pem
I0219 21:51:09.050732   12244 exec_runner.go:151] cp: C:\Users\simon\.minikube\certs\key.pem --> C:\Users\simon\.minikube/key.pem (1679 bytes)
I0219 21:51:09.065902   12244 exec_runner.go:144] found C:\Users\simon\.minikube/ca.pem, removing ...
I0219 21:51:09.065902   12244 exec_runner.go:203] rm: C:\Users\simon\.minikube\ca.pem
I0219 21:51:09.066521   12244 exec_runner.go:151] cp: C:\Users\simon\.minikube\certs\ca.pem --> C:\Users\simon\.minikube/ca.pem (1074 bytes)
I0219 21:51:09.068464   12244 provision.go:112] generating server cert: C:\Users\simon\.minikube\machines\server.pem ca-key=C:\Users\simon\.minikube\certs\ca.pem private-key=C:\Users\simon\.minikube\certs\ca-key.pem org=simon.minikube san=[192.168.49.2 127.0.0.1 localhost 127.0.0.1 minikube minikube]
I0219 21:51:09.316594   12244 provision.go:172] copyRemoteCerts
I0219 21:51:09.321590   12244 ssh_runner.go:195] Run: sudo mkdir -p /etc/docker /etc/docker /etc/docker
I0219 21:51:09.326162   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:09.452025   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:09.556732   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\certs\ca.pem --> /etc/docker/ca.pem (1074 bytes)
I0219 21:51:09.594039   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\machines\server.pem --> /etc/docker/server.pem (1196 bytes)
I0219 21:51:09.619678   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\machines\server-key.pem --> /etc/docker/server-key.pem (1679 bytes)
I0219 21:51:09.638653   12244 provision.go:86] duration metric: configureAuth took 724.5984ms
I0219 21:51:09.638653   12244 ubuntu.go:193] setting minikube options for container-runtime
I0219 21:51:09.639185   12244 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0219 21:51:09.648374   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:09.778807   12244 main.go:141] libmachine: Using SSH client type: native
I0219 21:51:09.779337   12244 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xb647e0] 0xb67320 <nil>  [] 0s} 127.0.0.1 55998 <nil> <nil>}
I0219 21:51:09.779337   12244 main.go:141] libmachine: About to run SSH command:
df --output=fstype / | tail -n 1
I0219 21:51:09.901255   12244 main.go:141] libmachine: SSH cmd err, output: <nil>: overlay

I0219 21:51:09.901255   12244 ubuntu.go:71] root file system type: overlay
I0219 21:51:09.901255   12244 provision.go:309] Updating docker unit: /lib/systemd/system/docker.service ...
I0219 21:51:09.906279   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:10.027399   12244 main.go:141] libmachine: Using SSH client type: native
I0219 21:51:10.033718   12244 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xb647e0] 0xb67320 <nil>  [] 0s} 127.0.0.1 55998 <nil> <nil>}
I0219 21:51:10.033718   12244 main.go:141] libmachine: About to run SSH command:
sudo mkdir -p /lib/systemd/system && printf %!s(MISSING) "[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP \$MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target
" | sudo tee /lib/systemd/system/docker.service.new
I0219 21:51:10.186900   12244 main.go:141] libmachine: SSH cmd err, output: <nil>: [Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com
BindsTo=containerd.service
After=network-online.target firewalld.service containerd.service
Wants=network-online.target
Requires=docker.socket
StartLimitBurst=3
StartLimitIntervalSec=60

[Service]
Type=notify
Restart=on-failure



# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
# The base configuration already specifies an 'ExecStart=...' command. The first directive
# here is to clear out that command inherited from the base configuration. Without this,
# the command from the base configuration and the command specified here are treated as
# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
# will catch this invalid input and refuse to start the service with an error like:
#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.

# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
ExecStart=
ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
ExecReload=/bin/kill -s HUP $MAINPID

# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNOFILE=infinity
LimitNPROC=infinity
LimitCORE=infinity

# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0

# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes

# kill only the docker process, not all processes in the cgroup
KillMode=process

[Install]
WantedBy=multi-user.target

I0219 21:51:10.196688   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:10.318854   12244 main.go:141] libmachine: Using SSH client type: native
I0219 21:51:10.319463   12244 main.go:141] libmachine: &{{{<nil> 0 [] [] []} docker [0xb647e0] 0xb67320 <nil>  [] 0s} 127.0.0.1 55998 <nil> <nil>}
I0219 21:51:10.319463   12244 main.go:141] libmachine: About to run SSH command:
sudo diff -u /lib/systemd/system/docker.service /lib/systemd/system/docker.service.new || { sudo mv /lib/systemd/system/docker.service.new /lib/systemd/system/docker.service; sudo systemctl -f daemon-reload && sudo systemctl -f enable docker && sudo systemctl -f restart docker; }
I0219 21:51:11.037482   12244 main.go:141] libmachine: SSH cmd err, output: <nil>: --- /lib/systemd/system/docker.service	2023-10-26 09:06:22.000000000 +0000
+++ /lib/systemd/system/docker.service.new	2024-02-19 20:51:10.171000263 +0000
@@ -1,30 +1,32 @@
 [Unit]
 Description=Docker Application Container Engine
 Documentation=https://docs.docker.com
-After=network-online.target docker.socket firewalld.service containerd.service time-set.target
-Wants=network-online.target containerd.service
+BindsTo=containerd.service
+After=network-online.target firewalld.service containerd.service
+Wants=network-online.target
 Requires=docker.socket
+StartLimitBurst=3
+StartLimitIntervalSec=60
 
 [Service]
 Type=notify
-# the default is not to use systemd for cgroups because the delegate issues still
-# exists and systemd currently does not support the cgroup feature set required
-# for containers run by docker
-ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock
-ExecReload=/bin/kill -s HUP $MAINPID
-TimeoutStartSec=0
-RestartSec=2
-Restart=always
+Restart=on-failure
 
-# Note that StartLimit* options were moved from "Service" to "Unit" in systemd 229.
-# Both the old, and new location are accepted by systemd 229 and up, so using the old location
-# to make them work for either version of systemd.
-StartLimitBurst=3
 
-# Note that StartLimitInterval was renamed to StartLimitIntervalSec in systemd 230.
-# Both the old, and new name are accepted by systemd 230 and up, so using the old name to make
-# this option work for either version of systemd.
-StartLimitInterval=60s
+
+# This file is a systemd drop-in unit that inherits from the base dockerd configuration.
+# The base configuration already specifies an 'ExecStart=...' command. The first directive
+# here is to clear out that command inherited from the base configuration. Without this,
+# the command from the base configuration and the command specified here are treated as
+# a sequence of commands, which is not the desired behavior, nor is it valid -- systemd
+# will catch this invalid input and refuse to start the service with an error like:
+#  Service has more than one ExecStart= setting, which is only allowed for Type=oneshot services.
+
+# NOTE: default-ulimit=nofile is set to an arbitrary number for consistency with other
+# container runtimes. If left unlimited, it may result in OOM issues with MySQL.
+ExecStart=
+ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:2376 -H unix:///var/run/docker.sock --default-ulimit=nofile=1048576:1048576 --tlsverify --tlscacert /etc/docker/ca.pem --tlscert /etc/docker/server.pem --tlskey /etc/docker/server-key.pem --label provider=docker --insecure-registry 10.96.0.0/12 
+ExecReload=/bin/kill -s HUP $MAINPID
 
 # Having non-zero Limit*s causes performance problems due to accounting overhead
 # in the kernel. We recommend using cgroups to do container-local accounting.
@@ -32,16 +34,16 @@
 LimitNPROC=infinity
 LimitCORE=infinity
 
-# Comment TasksMax if your systemd version does not support it.
-# Only systemd 226 and above support this option.
+# Uncomment TasksMax if your systemd version supports it.
+# Only systemd 226 and above support this version.
 TasksMax=infinity
+TimeoutStartSec=0
 
 # set delegate yes so that systemd does not reset the cgroups of docker containers
 Delegate=yes
 
 # kill only the docker process, not all processes in the cgroup
 KillMode=process
-OOMScoreAdjust=-500
 
 [Install]
 WantedBy=multi-user.target
Synchronizing state of docker.service with SysV service script with /lib/systemd/systemd-sysv-install.
Executing: /lib/systemd/systemd-sysv-install enable docker

I0219 21:51:11.037482   12244 machine.go:91] provisioned docker machine in 2.6817623s
I0219 21:51:11.037482   12244 client.go:171] LocalClient.Create took 15.0581032s
I0219 21:51:11.037482   12244 start.go:167] duration metric: libmachine.API.Create for "minikube" took 15.0581032s
I0219 21:51:11.037482   12244 start.go:300] post-start starting for "minikube" (driver="docker")
I0219 21:51:11.037482   12244 start.go:329] creating required directories: [/etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs]
I0219 21:51:11.049776   12244 ssh_runner.go:195] Run: sudo mkdir -p /etc/kubernetes/addons /etc/kubernetes/manifests /var/tmp/minikube /var/lib/minikube /var/lib/minikube/certs /var/lib/minikube/images /var/lib/minikube/binaries /tmp/gvisor /usr/share/ca-certificates /etc/ssl/certs
I0219 21:51:11.058678   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:11.177931   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:11.287996   12244 ssh_runner.go:195] Run: cat /etc/os-release
I0219 21:51:11.292410   12244 main.go:141] libmachine: Couldn't set key VERSION_CODENAME, no corresponding struct field found
I0219 21:51:11.292963   12244 main.go:141] libmachine: Couldn't set key PRIVACY_POLICY_URL, no corresponding struct field found
I0219 21:51:11.292963   12244 main.go:141] libmachine: Couldn't set key UBUNTU_CODENAME, no corresponding struct field found
I0219 21:51:11.292963   12244 info.go:137] Remote host: Ubuntu 22.04.3 LTS
I0219 21:51:11.292963   12244 filesync.go:126] Scanning C:\Users\simon\.minikube\addons for local assets ...
I0219 21:51:11.293496   12244 filesync.go:126] Scanning C:\Users\simon\.minikube\files for local assets ...
I0219 21:51:11.293496   12244 start.go:303] post-start completed in 256.0146ms
I0219 21:51:11.303819   12244 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0219 21:51:11.423972   12244 profile.go:148] Saving config to C:\Users\simon\.minikube\profiles\minikube\config.json ...
I0219 21:51:11.438954   12244 ssh_runner.go:195] Run: sh -c "df -h /var | awk 'NR==2{print $5}'"
I0219 21:51:11.446166   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:11.563899   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:11.678661   12244 ssh_runner.go:195] Run: sh -c "df -BG /var | awk 'NR==2{print $4}'"
I0219 21:51:11.685445   12244 start.go:128] duration metric: createHost completed in 15.7077824s
I0219 21:51:11.685445   12244 start.go:83] releasing machines lock for "minikube", held for 15.7077824s
I0219 21:51:11.696882   12244 cli_runner.go:164] Run: docker container inspect -f "{{range .NetworkSettings.Networks}}{{.IPAddress}},{{.GlobalIPv6Address}}{{end}}" minikube
I0219 21:51:11.828147   12244 ssh_runner.go:195] Run: curl -sS -m 2 https://registry.k8s.io/
I0219 21:51:11.837661   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:11.840806   12244 ssh_runner.go:195] Run: cat /version.json
I0219 21:51:11.850831   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:11.963398   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:11.982155   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:12.249001   12244 ssh_runner.go:195] Run: systemctl --version
I0219 21:51:12.263390   12244 ssh_runner.go:195] Run: sh -c "stat /etc/cni/net.d/*loopback.conf*"
I0219 21:51:12.280396   12244 ssh_runner.go:195] Run: sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;
W0219 21:51:12.289011   12244 start.go:416] unable to name loopback interface in configureRuntimes: unable to patch loopback cni config "/etc/cni/net.d/*loopback.conf*": sudo find \etc\cni\net.d -maxdepth 1 -type f -name *loopback.conf* -not -name *.mk_disabled -exec sh -c "grep -q loopback {} && ( grep -q name {} || sudo sed -i '/"type": "loopback"/i \ \ \ \ "name": "loopback",' {} ) && sudo sed -i 's|"cniVersion": ".*"|"cniVersion": "1.0.0"|g' {}" ;: Process exited with status 1
stdout:

stderr:
find: '\\etc\\cni\\net.d': No such file or directory
I0219 21:51:12.301329   12244 ssh_runner.go:195] Run: sudo find /etc/cni/net.d -maxdepth 1 -type f ( ( -name *bridge* -or -name *podman* ) -and -not -name *.mk_disabled ) -printf "%!p(MISSING), " -exec sh -c "sudo mv {} {}.mk_disabled" ;
I0219 21:51:12.328693   12244 cni.go:262] disabled [/etc/cni/net.d/100-crio-bridge.conf, /etc/cni/net.d/87-podman-bridge.conflist] bridge cni config(s)
I0219 21:51:12.328693   12244 start.go:472] detecting cgroup driver to use...
I0219 21:51:12.328693   12244 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0219 21:51:12.329198   12244 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///run/containerd/containerd.sock
" | sudo tee /etc/crictl.yaml"
I0219 21:51:12.355347   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)sandbox_image = .*$|\1sandbox_image = "registry.k8s.io/pause:3.9"|' /etc/containerd/config.toml"
I0219 21:51:12.377291   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)restrict_oom_score_adj = .*$|\1restrict_oom_score_adj = false|' /etc/containerd/config.toml"
I0219 21:51:12.387352   12244 containerd.go:145] configuring containerd to use "cgroupfs" as cgroup driver...
I0219 21:51:12.400264   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)SystemdCgroup = .*$|\1SystemdCgroup = false|g' /etc/containerd/config.toml"
I0219 21:51:12.427361   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runtime.v1.linux"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0219 21:51:12.448400   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i '/systemd_cgroup/d' /etc/containerd/config.toml"
I0219 21:51:12.469772   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i 's|"io.containerd.runc.v1"|"io.containerd.runc.v2"|g' /etc/containerd/config.toml"
I0219 21:51:12.490920   12244 ssh_runner.go:195] Run: sh -c "sudo rm -rf /etc/cni/net.mk"
I0219 21:51:12.506955   12244 ssh_runner.go:195] Run: sh -c "sudo sed -i -r 's|^( *)conf_dir = .*$|\1conf_dir = "/etc/cni/net.d"|g' /etc/containerd/config.toml"
I0219 21:51:12.524982   12244 ssh_runner.go:195] Run: sudo sysctl net.bridge.bridge-nf-call-iptables
I0219 21:51:12.562524   12244 ssh_runner.go:195] Run: sudo sh -c "echo 1 > /proc/sys/net/ipv4/ip_forward"
I0219 21:51:12.588095   12244 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0219 21:51:12.637573   12244 ssh_runner.go:195] Run: sudo systemctl restart containerd
I0219 21:51:12.743743   12244 start.go:472] detecting cgroup driver to use...
I0219 21:51:12.743743   12244 detect.go:196] detected "cgroupfs" cgroup driver on host os
I0219 21:51:12.758060   12244 ssh_runner.go:195] Run: sudo systemctl cat docker.service
I0219 21:51:12.771018   12244 cruntime.go:279] skipping containerd shutdown because we are bound to it
I0219 21:51:12.785026   12244 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service crio
I0219 21:51:12.796458   12244 ssh_runner.go:195] Run: /bin/bash -c "sudo mkdir -p /etc && printf %!s(MISSING) "runtime-endpoint: unix:///var/run/cri-dockerd.sock
" | sudo tee /etc/crictl.yaml"
I0219 21:51:12.822619   12244 ssh_runner.go:195] Run: which cri-dockerd
I0219 21:51:12.839629   12244 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/cri-docker.service.d
I0219 21:51:12.848954   12244 ssh_runner.go:362] scp memory --> /etc/systemd/system/cri-docker.service.d/10-cni.conf (189 bytes)
I0219 21:51:12.875913   12244 ssh_runner.go:195] Run: sudo systemctl unmask docker.service
I0219 21:51:12.952321   12244 ssh_runner.go:195] Run: sudo systemctl enable docker.socket
I0219 21:51:13.026929   12244 docker.go:560] configuring docker to use "cgroupfs" as cgroup driver...
I0219 21:51:13.026929   12244 ssh_runner.go:362] scp memory --> /etc/docker/daemon.json (130 bytes)
I0219 21:51:13.052124   12244 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0219 21:51:13.157264   12244 ssh_runner.go:195] Run: sudo systemctl restart docker
I0219 21:51:13.357866   12244 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0219 21:51:13.438726   12244 ssh_runner.go:195] Run: sudo systemctl unmask cri-docker.socket
I0219 21:51:13.556006   12244 ssh_runner.go:195] Run: sudo systemctl enable cri-docker.socket
I0219 21:51:13.640083   12244 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0219 21:51:13.742656   12244 ssh_runner.go:195] Run: sudo systemctl restart cri-docker.socket
I0219 21:51:13.767982   12244 ssh_runner.go:195] Run: sudo systemctl daemon-reload
I0219 21:51:13.870169   12244 ssh_runner.go:195] Run: sudo systemctl restart cri-docker
I0219 21:51:13.943582   12244 start.go:519] Will wait 60s for socket path /var/run/cri-dockerd.sock
I0219 21:51:13.954418   12244 ssh_runner.go:195] Run: stat /var/run/cri-dockerd.sock
I0219 21:51:13.959029   12244 start.go:540] Will wait 60s for crictl version
I0219 21:51:13.969826   12244 ssh_runner.go:195] Run: which crictl
I0219 21:51:13.987117   12244 ssh_runner.go:195] Run: sudo /usr/bin/crictl version
I0219 21:51:14.033004   12244 start.go:556] Version:  0.1.0
RuntimeName:  docker
RuntimeVersion:  24.0.7
RuntimeApiVersion:  v1
I0219 21:51:14.041972   12244 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0219 21:51:14.074737   12244 ssh_runner.go:195] Run: docker version --format {{.Server.Version}}
I0219 21:51:14.109443   12244 out.go:204] 🐳  Preparing Kubernetes v1.28.3 on Docker 24.0.7 ...
I0219 21:51:14.119189   12244 cli_runner.go:164] Run: docker exec -t minikube dig +short host.docker.internal
I0219 21:51:14.295886   12244 network.go:96] got host ip for mount in container by digging dns: 192.168.65.254
I0219 21:51:14.312617   12244 ssh_runner.go:195] Run: grep 192.168.65.254	host.minikube.internal$ /etc/hosts
I0219 21:51:14.317032   12244 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\thost.minikube.internal$' "/etc/hosts"; echo "192.168.65.254	host.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0219 21:51:14.335446   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0219 21:51:14.448571   12244 preload.go:132] Checking if preload exists for k8s version v1.28.3 and runtime docker
I0219 21:51:14.457614   12244 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0219 21:51:14.478684   12244 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0219 21:51:14.478684   12244 docker.go:601] Images already preloaded, skipping extraction
I0219 21:51:14.487682   12244 ssh_runner.go:195] Run: docker images --format {{.Repository}}:{{.Tag}}
I0219 21:51:14.503571   12244 docker.go:671] Got preloaded images: -- stdout --
registry.k8s.io/kube-apiserver:v1.28.3
registry.k8s.io/kube-controller-manager:v1.28.3
registry.k8s.io/kube-scheduler:v1.28.3
registry.k8s.io/kube-proxy:v1.28.3
registry.k8s.io/etcd:3.5.9-0
registry.k8s.io/coredns/coredns:v1.10.1
registry.k8s.io/pause:3.9
gcr.io/k8s-minikube/storage-provisioner:v5

-- /stdout --
I0219 21:51:14.503571   12244 cache_images.go:84] Images are preloaded, skipping loading
I0219 21:51:14.513598   12244 ssh_runner.go:195] Run: docker info --format {{.CgroupDriver}}
I0219 21:51:14.558881   12244 cni.go:84] Creating CNI manager for ""
I0219 21:51:14.559417   12244 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0219 21:51:14.559417   12244 kubeadm.go:87] Using pod CIDR: 10.244.0.0/16
I0219 21:51:14.559417   12244 kubeadm.go:176] kubeadm options: {CertDir:/var/lib/minikube/certs ServiceCIDR:10.96.0.0/12 PodSubnet:10.244.0.0/16 AdvertiseAddress:192.168.49.2 APIServerPort:8443 KubernetesVersion:v1.28.3 EtcdDataDir:/var/lib/minikube/etcd EtcdExtraArgs:map[] ClusterName:minikube NodeName:minikube DNSDomain:cluster.local CRISocket:/var/run/cri-dockerd.sock ImageRepository: ComponentOptions:[{Component:apiServer ExtraArgs:map[enable-admission-plugins:NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota] Pairs:map[certSANs:["127.0.0.1", "localhost", "192.168.49.2"]]} {Component:controllerManager ExtraArgs:map[allocate-node-cidrs:true leader-elect:false] Pairs:map[]} {Component:scheduler ExtraArgs:map[leader-elect:false] Pairs:map[]}] FeatureArgs:map[] NodeIP:192.168.49.2 CgroupDriver:cgroupfs ClientCAFile:/var/lib/minikube/certs/ca.crt StaticPodPath:/etc/kubernetes/manifests ControlPlaneAddress:control-plane.minikube.internal KubeProxyOptions:map[] ResolvConfSearchRegression:false KubeletConfigOpts:map[hairpinMode:hairpin-veth runtimeRequestTimeout:15m] PrependCriSocketUnix:true}
I0219 21:51:14.559417   12244 kubeadm.go:181] kubeadm config:
apiVersion: kubeadm.k8s.io/v1beta3
kind: InitConfiguration
localAPIEndpoint:
  advertiseAddress: 192.168.49.2
  bindPort: 8443
bootstrapTokens:
  - groups:
      - system:bootstrappers:kubeadm:default-node-token
    ttl: 24h0m0s
    usages:
      - signing
      - authentication
nodeRegistration:
  criSocket: unix:///var/run/cri-dockerd.sock
  name: "minikube"
  kubeletExtraArgs:
    node-ip: 192.168.49.2
  taints: []
---
apiVersion: kubeadm.k8s.io/v1beta3
kind: ClusterConfiguration
apiServer:
  certSANs: ["127.0.0.1", "localhost", "192.168.49.2"]
  extraArgs:
    enable-admission-plugins: "NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,NodeRestriction,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota"
controllerManager:
  extraArgs:
    allocate-node-cidrs: "true"
    leader-elect: "false"
scheduler:
  extraArgs:
    leader-elect: "false"
certificatesDir: /var/lib/minikube/certs
clusterName: mk
controlPlaneEndpoint: control-plane.minikube.internal:8443
etcd:
  local:
    dataDir: /var/lib/minikube/etcd
    extraArgs:
      proxy-refresh-interval: "70000"
kubernetesVersion: v1.28.3
networking:
  dnsDomain: cluster.local
  podSubnet: "10.244.0.0/16"
  serviceSubnet: 10.96.0.0/12
---
apiVersion: kubelet.config.k8s.io/v1beta1
kind: KubeletConfiguration
authentication:
  x509:
    clientCAFile: /var/lib/minikube/certs/ca.crt
cgroupDriver: cgroupfs
hairpinMode: hairpin-veth
runtimeRequestTimeout: 15m
clusterDomain: "cluster.local"
# disable disk resource management by default
imageGCHighThresholdPercent: 100
evictionHard:
  nodefs.available: "0%!"(MISSING)
  nodefs.inodesFree: "0%!"(MISSING)
  imagefs.available: "0%!"(MISSING)
failSwapOn: false
staticPodPath: /etc/kubernetes/manifests
---
apiVersion: kubeproxy.config.k8s.io/v1alpha1
kind: KubeProxyConfiguration
clusterCIDR: "10.244.0.0/16"
metricsBindAddress: 0.0.0.0:10249
conntrack:
  maxPerCore: 0
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_established"
  tcpEstablishedTimeout: 0s
# Skip setting "net.netfilter.nf_conntrack_tcp_timeout_close"
  tcpCloseWaitTimeout: 0s

I0219 21:51:14.559417   12244 kubeadm.go:976] kubelet [Unit]
Wants=docker.socket

[Service]
ExecStart=
ExecStart=/var/lib/minikube/binaries/v1.28.3/kubelet --bootstrap-kubeconfig=/etc/kubernetes/bootstrap-kubelet.conf --config=/var/lib/kubelet/config.yaml --container-runtime-endpoint=unix:///var/run/cri-dockerd.sock --hostname-override=minikube --kubeconfig=/etc/kubernetes/kubelet.conf --node-ip=192.168.49.2

[Install]
 config:
{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:}
I0219 21:51:14.567933   12244 ssh_runner.go:195] Run: sudo ls /var/lib/minikube/binaries/v1.28.3
I0219 21:51:14.575637   12244 binaries.go:44] Found k8s binaries, skipping transfer
I0219 21:51:14.583698   12244 ssh_runner.go:195] Run: sudo mkdir -p /etc/systemd/system/kubelet.service.d /lib/systemd/system /var/tmp/minikube
I0219 21:51:14.592193   12244 ssh_runner.go:362] scp memory --> /etc/systemd/system/kubelet.service.d/10-kubeadm.conf (369 bytes)
I0219 21:51:14.606748   12244 ssh_runner.go:362] scp memory --> /lib/systemd/system/kubelet.service (352 bytes)
I0219 21:51:14.621234   12244 ssh_runner.go:362] scp memory --> /var/tmp/minikube/kubeadm.yaml.new (2091 bytes)
I0219 21:51:14.642879   12244 ssh_runner.go:195] Run: grep 192.168.49.2	control-plane.minikube.internal$ /etc/hosts
I0219 21:51:14.646944   12244 ssh_runner.go:195] Run: /bin/bash -c "{ grep -v $'\tcontrol-plane.minikube.internal$' "/etc/hosts"; echo "192.168.49.2	control-plane.minikube.internal"; } > /tmp/h.$$; sudo cp /tmp/h.$$ "/etc/hosts""
I0219 21:51:14.655738   12244 certs.go:56] Setting up C:\Users\simon\.minikube\profiles\minikube for IP: 192.168.49.2
I0219 21:51:14.656245   12244 certs.go:190] acquiring lock for shared ca certs: {Name:mkeb675763e6ff45c649f16bc2370fcbb4902255 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:14.663800   12244 certs.go:199] skipping minikubeCA CA generation: C:\Users\simon\.minikube\ca.key
I0219 21:51:14.664845   12244 certs.go:199] skipping proxyClientCA CA generation: C:\Users\simon\.minikube\proxy-client-ca.key
I0219 21:51:14.664845   12244 certs.go:319] generating minikube-user signed cert: C:\Users\simon\.minikube\profiles\minikube\client.key
I0219 21:51:14.664845   12244 crypto.go:68] Generating cert C:\Users\simon\.minikube\profiles\minikube\client.crt with IP's: []
I0219 21:51:14.750654   12244 crypto.go:156] Writing cert to C:\Users\simon\.minikube\profiles\minikube\client.crt ...
I0219 21:51:14.750654   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\client.crt: {Name:mkd2df4059eda29932e7c4f2a3f9d63fd58d8a2f Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:14.751656   12244 crypto.go:164] Writing key to C:\Users\simon\.minikube\profiles\minikube\client.key ...
I0219 21:51:14.751656   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\client.key: {Name:mk367bd3064cea2b739f7b51116e92a962e892bd Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:14.752656   12244 certs.go:319] generating minikube signed cert: C:\Users\simon\.minikube\profiles\minikube\apiserver.key.dd3b5fb2
I0219 21:51:14.752656   12244 crypto.go:68] Generating cert C:\Users\simon\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 with IP's: [192.168.49.2 10.96.0.1 127.0.0.1 10.0.0.1]
I0219 21:51:14.909597   12244 crypto.go:156] Writing cert to C:\Users\simon\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 ...
I0219 21:51:14.909597   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2: {Name:mka12903702995d59aedc0fdf5df364af4224ae4 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:14.910597   12244 crypto.go:164] Writing key to C:\Users\simon\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 ...
I0219 21:51:14.910597   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\apiserver.key.dd3b5fb2: {Name:mkf5b018135d1e3d769039975fa8aaa138673608 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:14.911751   12244 certs.go:337] copying C:\Users\simon\.minikube\profiles\minikube\apiserver.crt.dd3b5fb2 -> C:\Users\simon\.minikube\profiles\minikube\apiserver.crt
I0219 21:51:14.926579   12244 certs.go:341] copying C:\Users\simon\.minikube\profiles\minikube\apiserver.key.dd3b5fb2 -> C:\Users\simon\.minikube\profiles\minikube\apiserver.key
I0219 21:51:14.933200   12244 certs.go:319] generating aggregator signed cert: C:\Users\simon\.minikube\profiles\minikube\proxy-client.key
I0219 21:51:14.933200   12244 crypto.go:68] Generating cert C:\Users\simon\.minikube\profiles\minikube\proxy-client.crt with IP's: []
I0219 21:51:15.025937   12244 crypto.go:156] Writing cert to C:\Users\simon\.minikube\profiles\minikube\proxy-client.crt ...
I0219 21:51:15.025937   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\proxy-client.crt: {Name:mkddf8863fcd57aaa90f98345febf4e59080fb9a Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:15.026938   12244 crypto.go:164] Writing key to C:\Users\simon\.minikube\profiles\minikube\proxy-client.key ...
I0219 21:51:15.026938   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.minikube\profiles\minikube\proxy-client.key: {Name:mkf7b9e624c68e758610e3165ced4ab37c649dae Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:15.039349   12244 certs.go:437] found cert: C:\Users\simon\.minikube\certs\C:\Users\simon\.minikube\certs\ca-key.pem (1679 bytes)
I0219 21:51:15.039349   12244 certs.go:437] found cert: C:\Users\simon\.minikube\certs\C:\Users\simon\.minikube\certs\ca.pem (1074 bytes)
I0219 21:51:15.039349   12244 certs.go:437] found cert: C:\Users\simon\.minikube\certs\C:\Users\simon\.minikube\certs\cert.pem (1119 bytes)
I0219 21:51:15.039349   12244 certs.go:437] found cert: C:\Users\simon\.minikube\certs\C:\Users\simon\.minikube\certs\key.pem (1679 bytes)
I0219 21:51:15.039349   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\profiles\minikube\apiserver.crt --> /var/lib/minikube/certs/apiserver.crt (1399 bytes)
I0219 21:51:15.059672   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\profiles\minikube\apiserver.key --> /var/lib/minikube/certs/apiserver.key (1675 bytes)
I0219 21:51:15.077392   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\profiles\minikube\proxy-client.crt --> /var/lib/minikube/certs/proxy-client.crt (1147 bytes)
I0219 21:51:15.096547   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\profiles\minikube\proxy-client.key --> /var/lib/minikube/certs/proxy-client.key (1679 bytes)
I0219 21:51:15.118439   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\ca.crt --> /var/lib/minikube/certs/ca.crt (1111 bytes)
I0219 21:51:15.138307   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\ca.key --> /var/lib/minikube/certs/ca.key (1679 bytes)
I0219 21:51:15.159635   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\proxy-client-ca.crt --> /var/lib/minikube/certs/proxy-client-ca.crt (1119 bytes)
I0219 21:51:15.179370   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\proxy-client-ca.key --> /var/lib/minikube/certs/proxy-client-ca.key (1675 bytes)
I0219 21:51:15.197220   12244 ssh_runner.go:362] scp C:\Users\simon\.minikube\ca.crt --> /usr/share/ca-certificates/minikubeCA.pem (1111 bytes)
I0219 21:51:15.217042   12244 ssh_runner.go:362] scp memory --> /var/lib/minikube/kubeconfig (738 bytes)
I0219 21:51:15.237135   12244 ssh_runner.go:195] Run: openssl version
I0219 21:51:15.247969   12244 ssh_runner.go:195] Run: sudo /bin/bash -c "test -s /usr/share/ca-certificates/minikubeCA.pem && ln -fs /usr/share/ca-certificates/minikubeCA.pem /etc/ssl/certs/minikubeCA.pem"
I0219 21:51:15.263601   12244 ssh_runner.go:195] Run: ls -la /usr/share/ca-certificates/minikubeCA.pem
I0219 21:51:15.267977   12244 certs.go:480] hashing: -rw-r--r-- 1 root root 1111 Feb 12 14:11 /usr/share/ca-certificates/minikubeCA.pem
I0219 21:51:15.276227   12244 ssh_runner.go:195] Run: openssl x509 -hash -noout -in /usr/share/ca-certificates/minikubeCA.pem
I0219 21:51:15.288142   12244 ssh_runner.go:195] Run: sudo /bin/bash -c "test -L /etc/ssl/certs/b5213941.0 || ln -fs /etc/ssl/certs/minikubeCA.pem /etc/ssl/certs/b5213941.0"
I0219 21:51:15.303156   12244 ssh_runner.go:195] Run: ls /var/lib/minikube/certs/etcd
I0219 21:51:15.306974   12244 certs.go:353] certs directory doesn't exist, likely first start: ls /var/lib/minikube/certs/etcd: Process exited with status 2
stdout:

stderr:
ls: cannot access '/var/lib/minikube/certs/etcd': No such file or directory
I0219 21:51:15.307496   12244 kubeadm.go:404] StartCluster: {Name:minikube KeepContext:false EmbedCerts:false MinikubeISO: KicBaseImage:gcr.io/k8s-minikube/kicbase:v0.0.42@sha256:d35ac07dfda971cabee05e0deca8aeac772f885a5348e1a0c0b0a36db20fcfc0 Memory:4000 CPUs:2 DiskSize:20000 VMDriver: Driver:docker HyperkitVpnKitSock: HyperkitVSockPorts:[] DockerEnv:[] ContainerVolumeMounts:[] InsecureRegistry:[] RegistryMirror:[] HostOnlyCIDR:192.168.59.1/24 HypervVirtualSwitch: HypervUseExternalSwitch:false HypervExternalAdapter: KVMNetwork:default KVMQemuURI:qemu:///system KVMGPU:false KVMHidden:false KVMNUMACount:1 APIServerPort:0 DockerOpt:[] DisableDriverMounts:false NFSShare:[] NFSSharesRoot:/nfsshares UUID: NoVTXCheck:false DNSProxy:false HostDNSResolver:true HostOnlyNicType:virtio NatNicType:virtio SSHIPAddress: SSHUser:root SSHKey: SSHPort:22 KubernetesConfig:{KubernetesVersion:v1.28.3 ClusterName:minikube Namespace:default APIServerName:minikubeCA APIServerNames:[] APIServerIPs:[] DNSDomain:cluster.local ContainerRuntime:docker CRISocket: NetworkPlugin:cni FeatureGates: ServiceCIDR:10.96.0.0/12 ImageRepository: LoadBalancerStartIP: LoadBalancerEndIP: CustomIngressCert: RegistryAliases: ExtraOptions:[] ShouldLoadCachedImages:true EnableDefaultCNI:false CNI: NodeIP: NodePort:8443 NodeName:} Nodes:[{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}] Addons:map[] CustomAddonImages:map[] CustomAddonRegistries:map[] VerifyComponents:map[apiserver:true system_pods:true] StartHostTimeout:6m0s ScheduledStop:<nil> ExposedPorts:[] ListenAddress: Network: Subnet: MultiNodeRequested:false ExtraDisks:0 CertExpiration:26280h0m0s Mount:false MountString:C:\Users\simon:/minikube-host Mount9PVersion:9p2000.L MountGID:docker MountIP: MountMSize:262144 MountOptions:[] MountPort:0 MountType:9p MountUID:docker BinaryMirror: DisableOptimizations:false DisableMetrics:false CustomQemuFirmwarePath: SocketVMnetClientPath: SocketVMnetPath: StaticIP: SSHAuthSock: SSHAgentPID:0 AutoPauseInterval:1m0s GPUs:}
I0219 21:51:15.311922   12244 ssh_runner.go:195] Run: docker ps --filter status=paused --filter=name=k8s_.*_(kube-system)_ --format={{.ID}}
I0219 21:51:15.338384   12244 ssh_runner.go:195] Run: sudo ls /var/lib/kubelet/kubeadm-flags.env /var/lib/kubelet/config.yaml /var/lib/minikube/etcd
I0219 21:51:15.352409   12244 ssh_runner.go:195] Run: sudo cp /var/tmp/minikube/kubeadm.yaml.new /var/tmp/minikube/kubeadm.yaml
I0219 21:51:15.360442   12244 kubeadm.go:226] ignoring SystemVerification for kubeadm because of docker driver
I0219 21:51:15.366492   12244 ssh_runner.go:195] Run: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf
I0219 21:51:15.375912   12244 kubeadm.go:152] config check failed, skipping stale config cleanup: sudo ls -la /etc/kubernetes/admin.conf /etc/kubernetes/kubelet.conf /etc/kubernetes/controller-manager.conf /etc/kubernetes/scheduler.conf: Process exited with status 2
stdout:

stderr:
ls: cannot access '/etc/kubernetes/admin.conf': No such file or directory
ls: cannot access '/etc/kubernetes/kubelet.conf': No such file or directory
ls: cannot access '/etc/kubernetes/controller-manager.conf': No such file or directory
ls: cannot access '/etc/kubernetes/scheduler.conf': No such file or directory
I0219 21:51:15.375912   12244 ssh_runner.go:286] Start: /bin/bash -c "sudo env PATH="/var/lib/minikube/binaries/v1.28.3:$PATH" kubeadm init --config /var/tmp/minikube/kubeadm.yaml  --ignore-preflight-errors=DirAvailable--etc-kubernetes-manifests,DirAvailable--var-lib-minikube,DirAvailable--var-lib-minikube-etcd,FileAvailable--etc-kubernetes-manifests-kube-scheduler.yaml,FileAvailable--etc-kubernetes-manifests-kube-apiserver.yaml,FileAvailable--etc-kubernetes-manifests-kube-controller-manager.yaml,FileAvailable--etc-kubernetes-manifests-etcd.yaml,Port-10250,Swap,NumCPU,Mem,SystemVerification,FileContent--proc-sys-net-bridge-bridge-nf-call-iptables"
I0219 21:51:15.459858   12244 kubeadm.go:322] 	[WARNING Swap]: swap is enabled; production deployments should disable swap unless testing the NodeSwap feature gate of the kubelet
I0219 21:51:15.523523   12244 kubeadm.go:322] 	[WARNING Service-Kubelet]: kubelet service is not enabled, please run 'systemctl enable kubelet.service'
I0219 21:51:26.023297   12244 kubeadm.go:322] [init] Using Kubernetes version: v1.28.3
I0219 21:51:26.023297   12244 kubeadm.go:322] [preflight] Running pre-flight checks
I0219 21:51:26.023867   12244 kubeadm.go:322] [preflight] Pulling images required for setting up a Kubernetes cluster
I0219 21:51:26.023867   12244 kubeadm.go:322] [preflight] This might take a minute or two, depending on the speed of your internet connection
I0219 21:51:26.024555   12244 kubeadm.go:322] [preflight] You can also perform this action in beforehand using 'kubeadm config images pull'
I0219 21:51:26.024753   12244 kubeadm.go:322] [certs] Using certificateDir folder "/var/lib/minikube/certs"
I0219 21:51:26.026461   12244 out.go:204]     ▪ Generating certificates and keys ...
I0219 21:51:26.027980   12244 kubeadm.go:322] [certs] Using existing ca certificate authority
I0219 21:51:26.027980   12244 kubeadm.go:322] [certs] Using existing apiserver certificate and key on disk
I0219 21:51:26.027980   12244 kubeadm.go:322] [certs] Generating "apiserver-kubelet-client" certificate and key
I0219 21:51:26.028545   12244 kubeadm.go:322] [certs] Generating "front-proxy-ca" certificate and key
I0219 21:51:26.028545   12244 kubeadm.go:322] [certs] Generating "front-proxy-client" certificate and key
I0219 21:51:26.028545   12244 kubeadm.go:322] [certs] Generating "etcd/ca" certificate and key
I0219 21:51:26.028545   12244 kubeadm.go:322] [certs] Generating "etcd/server" certificate and key
I0219 21:51:26.028545   12244 kubeadm.go:322] [certs] etcd/server serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0219 21:51:26.029109   12244 kubeadm.go:322] [certs] Generating "etcd/peer" certificate and key
I0219 21:51:26.029109   12244 kubeadm.go:322] [certs] etcd/peer serving cert is signed for DNS names [localhost minikube] and IPs [192.168.49.2 127.0.0.1 ::1]
I0219 21:51:26.029109   12244 kubeadm.go:322] [certs] Generating "etcd/healthcheck-client" certificate and key
I0219 21:51:26.029676   12244 kubeadm.go:322] [certs] Generating "apiserver-etcd-client" certificate and key
I0219 21:51:26.029676   12244 kubeadm.go:322] [certs] Generating "sa" key and public key
I0219 21:51:26.029676   12244 kubeadm.go:322] [kubeconfig] Using kubeconfig folder "/etc/kubernetes"
I0219 21:51:26.029676   12244 kubeadm.go:322] [kubeconfig] Writing "admin.conf" kubeconfig file
I0219 21:51:26.029676   12244 kubeadm.go:322] [kubeconfig] Writing "kubelet.conf" kubeconfig file
I0219 21:51:26.029676   12244 kubeadm.go:322] [kubeconfig] Writing "controller-manager.conf" kubeconfig file
I0219 21:51:26.030231   12244 kubeadm.go:322] [kubeconfig] Writing "scheduler.conf" kubeconfig file
I0219 21:51:26.030231   12244 kubeadm.go:322] [etcd] Creating static Pod manifest for local etcd in "/etc/kubernetes/manifests"
I0219 21:51:26.030231   12244 kubeadm.go:322] [control-plane] Using manifest folder "/etc/kubernetes/manifests"
I0219 21:51:26.030771   12244 out.go:204]     ▪ Booting up control plane ...
I0219 21:51:26.031313   12244 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-apiserver"
I0219 21:51:26.031313   12244 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-controller-manager"
I0219 21:51:26.031861   12244 kubeadm.go:322] [control-plane] Creating static Pod manifest for "kube-scheduler"
I0219 21:51:26.031861   12244 kubeadm.go:322] [kubelet-start] Writing kubelet environment file with flags to file "/var/lib/kubelet/kubeadm-flags.env"
I0219 21:51:26.031861   12244 kubeadm.go:322] [kubelet-start] Writing kubelet configuration to file "/var/lib/kubelet/config.yaml"
I0219 21:51:26.031861   12244 kubeadm.go:322] [kubelet-start] Starting the kubelet
I0219 21:51:26.032414   12244 kubeadm.go:322] [wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory "/etc/kubernetes/manifests". This can take up to 4m0s
I0219 21:51:26.032414   12244 kubeadm.go:322] [apiclient] All control plane components are healthy after 7.003442 seconds
I0219 21:51:26.032414   12244 kubeadm.go:322] [upload-config] Storing the configuration used in ConfigMap "kubeadm-config" in the "kube-system" Namespace
I0219 21:51:26.032943   12244 kubeadm.go:322] [kubelet] Creating a ConfigMap "kubelet-config" in namespace kube-system with the configuration for the kubelets in the cluster
I0219 21:51:26.032943   12244 kubeadm.go:322] [upload-certs] Skipping phase. Please see --upload-certs
I0219 21:51:26.032943   12244 kubeadm.go:322] [mark-control-plane] Marking the node minikube as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
I0219 21:51:26.033452   12244 kubeadm.go:322] [bootstrap-token] Using token: kf2oy2.cxvpbddyplmid2a7
I0219 21:51:26.034038   12244 out.go:204]     ▪ Configuring RBAC rules ...
I0219 21:51:26.034038   12244 kubeadm.go:322] [bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap, RBAC Roles
I0219 21:51:26.034038   12244 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
I0219 21:51:26.034552   12244 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
I0219 21:51:26.034552   12244 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
I0219 21:51:26.035084   12244 kubeadm.go:322] [bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
I0219 21:51:26.035084   12244 kubeadm.go:322] [bootstrap-token] Creating the "cluster-info" ConfigMap in the "kube-public" namespace
I0219 21:51:26.035084   12244 kubeadm.go:322] [kubelet-finalize] Updating "/etc/kubernetes/kubelet.conf" to point to a rotatable kubelet client certificate and key
I0219 21:51:26.035084   12244 kubeadm.go:322] [addons] Applied essential addon: CoreDNS
I0219 21:51:26.035611   12244 kubeadm.go:322] [addons] Applied essential addon: kube-proxy
I0219 21:51:26.035611   12244 kubeadm.go:322] 
I0219 21:51:26.035611   12244 kubeadm.go:322] Your Kubernetes control-plane has initialized successfully!
I0219 21:51:26.035611   12244 kubeadm.go:322] 
I0219 21:51:26.035611   12244 kubeadm.go:322] To start using your cluster, you need to run the following as a regular user:
I0219 21:51:26.035611   12244 kubeadm.go:322] 
I0219 21:51:26.035611   12244 kubeadm.go:322]   mkdir -p $HOME/.kube
I0219 21:51:26.035611   12244 kubeadm.go:322]   sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
I0219 21:51:26.035611   12244 kubeadm.go:322]   sudo chown $(id -u):$(id -g) $HOME/.kube/config
I0219 21:51:26.035611   12244 kubeadm.go:322] 
I0219 21:51:26.036128   12244 kubeadm.go:322] Alternatively, if you are the root user, you can run:
I0219 21:51:26.036128   12244 kubeadm.go:322] 
I0219 21:51:26.036128   12244 kubeadm.go:322]   export KUBECONFIG=/etc/kubernetes/admin.conf
I0219 21:51:26.036128   12244 kubeadm.go:322] 
I0219 21:51:26.036128   12244 kubeadm.go:322] You should now deploy a pod network to the cluster.
I0219 21:51:26.036128   12244 kubeadm.go:322] Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
I0219 21:51:26.036650   12244 kubeadm.go:322]   https://kubernetes.io/docs/concepts/cluster-administration/addons/
I0219 21:51:26.036650   12244 kubeadm.go:322] 
I0219 21:51:26.036650   12244 kubeadm.go:322] You can now join any number of control-plane nodes by copying certificate authorities
I0219 21:51:26.036650   12244 kubeadm.go:322] and service account keys on each node and then running the following as root:
I0219 21:51:26.036650   12244 kubeadm.go:322] 
I0219 21:51:26.036650   12244 kubeadm.go:322]   kubeadm join control-plane.minikube.internal:8443 --token kf2oy2.cxvpbddyplmid2a7 \
I0219 21:51:26.037209   12244 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:2ca0617cfba24fa782963fa622e19234bc4d2fe251716c2d843d29afa67462b1 \
I0219 21:51:26.037209   12244 kubeadm.go:322] 	--control-plane 
I0219 21:51:26.037209   12244 kubeadm.go:322] 
I0219 21:51:26.037209   12244 kubeadm.go:322] Then you can join any number of worker nodes by running the following on each as root:
I0219 21:51:26.037209   12244 kubeadm.go:322] 
I0219 21:51:26.037209   12244 kubeadm.go:322] kubeadm join control-plane.minikube.internal:8443 --token kf2oy2.cxvpbddyplmid2a7 \
I0219 21:51:26.037209   12244 kubeadm.go:322] 	--discovery-token-ca-cert-hash sha256:2ca0617cfba24fa782963fa622e19234bc4d2fe251716c2d843d29afa67462b1 
I0219 21:51:26.037209   12244 cni.go:84] Creating CNI manager for ""
I0219 21:51:26.037209   12244 cni.go:158] "docker" driver + "docker" container runtime found on kubernetes v1.24+, recommending bridge
I0219 21:51:26.038304   12244 out.go:177] 🔗  Configuring bridge CNI (Container Networking Interface) ...
I0219 21:51:26.049690   12244 ssh_runner.go:195] Run: sudo mkdir -p /etc/cni/net.d
I0219 21:51:26.122672   12244 ssh_runner.go:362] scp memory --> /etc/cni/net.d/1-k8s.conflist (457 bytes)
I0219 21:51:26.316314   12244 ssh_runner.go:195] Run: /bin/bash -c "cat /proc/$(pgrep kube-apiserver)/oom_adj"
I0219 21:51:26.342591   12244 ops.go:34] apiserver oom_adj: -16
I0219 21:51:26.354715   12244 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl label nodes minikube.k8s.io/version=v1.32.0 minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d minikube.k8s.io/name=minikube minikube.k8s.io/updated_at=2024_02_19T21_51_26_0700 minikube.k8s.io/primary=true --all --overwrite --kubeconfig=/var/lib/minikube/kubeconfig
I0219 21:51:26.354715   12244 ssh_runner.go:195] Run: sudo /var/lib/minikube/binaries/v1.28.3/kubectl create clusterrolebinding minikube-rbac --clusterrole=cluster-admin --serviceaccount=kube-system:default --kubeconfig=/var/lib/minikube/kubeconfig
I0219 21:51:26.928997   12244 kubeadm.go:1081] duration metric: took 612.6837ms to wait for elevateKubeSystemPrivileges.
I0219 21:51:27.033804   12244 kubeadm.go:406] StartCluster complete in 11.7263087s
I0219 21:51:27.033804   12244 settings.go:142] acquiring lock: {Name:mk6b4ff5ae48714069d81d57330740600da17dd0 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:27.034314   12244 settings.go:150] Updating kubeconfig:  C:\Users\simon\.kube\config
I0219 21:51:27.035379   12244 lock.go:35] WriteFile acquiring C:\Users\simon\.kube\config: {Name:mkc32726dab00268fde99075bb942d8541091b94 Clock:{} Delay:500ms Timeout:1m0s Cancel:<nil>}
I0219 21:51:27.035917   12244 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml"
I0219 21:51:27.036454   12244 addons.go:499] enable addons start: toEnable=map[ambassador:false auto-pause:false cloud-spanner:false csi-hostpath-driver:false dashboard:false default-storageclass:true efk:false freshpod:false gcp-auth:false gvisor:false headlamp:false helm-tiller:false inaccel:false ingress:false ingress-dns:false inspektor-gadget:false istio:false istio-provisioner:false kong:false kubeflow:false kubevirt:false logviewer:false metallb:false metrics-server:false nvidia-device-plugin:false nvidia-driver-installer:false nvidia-gpu-device-plugin:false olm:false pod-security-policy:false portainer:false registry:false registry-aliases:false registry-creds:false storage-provisioner:true storage-provisioner-gluster:false storage-provisioner-rancher:false volumesnapshots:false]
I0219 21:51:27.036454   12244 addons.go:69] Setting storage-provisioner=true in profile "minikube"
I0219 21:51:27.036454   12244 addons.go:231] Setting addon storage-provisioner=true in "minikube"
I0219 21:51:27.036454   12244 addons.go:69] Setting default-storageclass=true in profile "minikube"
I0219 21:51:27.036454   12244 addons_storage_classes.go:33] enableOrDisableStorageClasses default-storageclass=true on "minikube"
I0219 21:51:27.036454   12244 host.go:66] Checking if "minikube" exists ...
I0219 21:51:27.036990   12244 config.go:182] Loaded profile config "minikube": Driver=docker, ContainerRuntime=docker, KubernetesVersion=v1.28.3
I0219 21:51:27.057772   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:27.061058   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:27.123532   12244 kapi.go:248] "coredns" deployment in "kube-system" namespace and "minikube" context rescaled to 1 replicas
I0219 21:51:27.123532   12244 start.go:223] Will wait 6m0s for node &{Name: IP:192.168.49.2 Port:8443 KubernetesVersion:v1.28.3 ContainerRuntime:docker ControlPlane:true Worker:true}
I0219 21:51:27.124558   12244 out.go:177] 🔎  Verifying Kubernetes components...
I0219 21:51:27.139155   12244 ssh_runner.go:195] Run: sudo systemctl is-active --quiet service kubelet
I0219 21:51:27.205587   12244 out.go:177]     ▪ Using image gcr.io/k8s-minikube/storage-provisioner:v5
I0219 21:51:27.206738   12244 addons.go:423] installing /etc/kubernetes/addons/storage-provisioner.yaml
I0219 21:51:27.206738   12244 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storage-provisioner.yaml (2676 bytes)
I0219 21:51:27.219705   12244 addons.go:231] Setting addon default-storageclass=true in "minikube"
I0219 21:51:27.219705   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:27.220277   12244 host.go:66] Checking if "minikube" exists ...
I0219 21:51:27.221454   12244 ssh_runner.go:195] Run: /bin/bash -c "sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig -n kube-system get configmap coredns -o yaml | sed -e '/^        forward . \/etc\/resolv.conf.*/i \        hosts {\n           192.168.65.254 host.minikube.internal\n           fallthrough\n        }' -e '/^        errors *$/i \        log' | sudo /var/lib/minikube/binaries/v1.28.3/kubectl --kubeconfig=/var/lib/minikube/kubeconfig replace -f -"
I0219 21:51:27.236384   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "8443/tcp") 0).HostPort}}'" minikube
I0219 21:51:27.249899   12244 cli_runner.go:164] Run: docker container inspect minikube --format={{.State.Status}}
I0219 21:51:27.386969   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:27.402973   12244 addons.go:423] installing /etc/kubernetes/addons/storageclass.yaml
I0219 21:51:27.402973   12244 ssh_runner.go:362] scp memory --> /etc/kubernetes/addons/storageclass.yaml (271 bytes)
I0219 21:51:27.419415   12244 cli_runner.go:164] Run: docker container inspect -f "'{{(index (index .NetworkSettings.Ports "22/tcp") 0).HostPort}}'" minikube
I0219 21:51:27.421055   12244 api_server.go:52] waiting for apiserver process to appear ...
I0219 21:51:27.436176   12244 ssh_runner.go:195] Run: sudo pgrep -xnf kube-apiserver.*minikube.*
I0219 21:51:27.524487   12244 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storage-provisioner.yaml
I0219 21:51:27.556587   12244 sshutil.go:53] new ssh client: &{IP:127.0.0.1 Port:55998 SSHKeyPath:C:\Users\simon\.minikube\machines\minikube\id_rsa Username:docker}
I0219 21:51:27.737523   12244 ssh_runner.go:195] Run: sudo KUBECONFIG=/var/lib/minikube/kubeconfig /var/lib/minikube/binaries/v1.28.3/kubectl apply -f /etc/kubernetes/addons/storageclass.yaml
I0219 21:51:28.128639   12244 start.go:926] {"host.minikube.internal": 192.168.65.254} host record injected into CoreDNS's ConfigMap
I0219 21:51:28.128717   12244 api_server.go:72] duration metric: took 1.0051065s to wait for apiserver process to appear ...
I0219 21:51:28.128717   12244 api_server.go:88] waiting for apiserver healthz status ...
I0219 21:51:28.128717   12244 api_server.go:253] Checking apiserver healthz at https://127.0.0.1:55997/healthz ...
I0219 21:51:28.140439   12244 api_server.go:279] https://127.0.0.1:55997/healthz returned 200:
ok
I0219 21:51:28.143298   12244 api_server.go:141] control plane version: v1.28.3
I0219 21:51:28.143298   12244 api_server.go:131] duration metric: took 14.5803ms to wait for apiserver health ...
I0219 21:51:28.143803   12244 system_pods.go:43] waiting for kube-system pods to appear ...
I0219 21:51:28.152302   12244 system_pods.go:59] 4 kube-system pods found
I0219 21:51:28.152302   12244 system_pods.go:61] "etcd-minikube" [d22dad06-7abe-49ab-9ba5-b34914807e70] Running / Ready:ContainersNotReady (containers with unready status: [etcd]) / ContainersReady:ContainersNotReady (containers with unready status: [etcd])
I0219 21:51:28.152302   12244 system_pods.go:61] "kube-apiserver-minikube" [75513201-408d-47af-983f-a9fa0ebb7e61] Running / Ready:ContainersNotReady (containers with unready status: [kube-apiserver]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-apiserver])
I0219 21:51:28.152302   12244 system_pods.go:61] "kube-controller-manager-minikube" [71e859a8-ba22-417d-960c-2654e92a3542] Running / Ready:ContainersNotReady (containers with unready status: [kube-controller-manager]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-controller-manager])
I0219 21:51:28.152302   12244 system_pods.go:61] "kube-scheduler-minikube" [e830b9ee-a886-41e0-bf13-a0da447a5722] Running / Ready:ContainersNotReady (containers with unready status: [kube-scheduler]) / ContainersReady:ContainersNotReady (containers with unready status: [kube-scheduler])
I0219 21:51:28.152302   12244 system_pods.go:74] duration metric: took 8.4986ms to wait for pod list to return data ...
I0219 21:51:28.152302   12244 kubeadm.go:581] duration metric: took 1.0287697s to wait for : map[apiserver:true system_pods:true] ...
I0219 21:51:28.152302   12244 node_conditions.go:102] verifying NodePressure condition ...
I0219 21:51:28.214576   12244 node_conditions.go:122] node storage ephemeral capacity is 1055762868Ki
I0219 21:51:28.214576   12244 node_conditions.go:123] node cpu capacity is 12
I0219 21:51:28.214576   12244 node_conditions.go:105] duration metric: took 62.2743ms to run NodePressure ...
I0219 21:51:28.214576   12244 start.go:228] waiting for startup goroutines ...
I0219 21:51:28.411063   12244 out.go:177] 🌟  Enabled addons: storage-provisioner, default-storageclass
I0219 21:51:28.412133   12244 addons.go:502] enable addons completed in 1.3756788s: enabled=[storage-provisioner default-storageclass]
I0219 21:51:28.412133   12244 start.go:233] waiting for cluster config update ...
I0219 21:51:28.412133   12244 start.go:242] writing updated cluster config ...
I0219 21:51:28.427194   12244 ssh_runner.go:195] Run: rm -f paused
I0219 21:51:28.567731   12244 start.go:600] kubectl: 1.29.1, cluster: 1.28.3 (minor skew: 1)
I0219 21:51:28.568812   12244 out.go:177] 🏄  Done! kubectl is now configured to use "minikube" cluster and "default" namespace by default

* 
* ==> Docker <==
* Feb 19 20:51:13 minikube cri-dockerd[1372]: time="2024-02-19T20:51:13Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:,},}"
Feb 19 20:51:13 minikube cri-dockerd[1372]: time="2024-02-19T20:51:13Z" level=info msg="Starting the GRPC backend for the Docker CRI interface."
Feb 19 20:51:13 minikube cri-dockerd[1372]: time="2024-02-19T20:51:13Z" level=info msg="Start cri-dockerd grpc backend"
Feb 19 20:51:13 minikube systemd[1]: Started CRI Interface for Docker Application Container Engine.
Feb 19 20:51:18 minikube cri-dockerd[1372]: time="2024-02-19T20:51:18Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/d101426c3933d7d55ab7f4bd8efd0c541e1ec4615928172f1925eee68ceffe10/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:18 minikube cri-dockerd[1372]: time="2024-02-19T20:51:18Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/685c566d0c1cccc84f0bf54c2a12126f64b031552b9268db799ef063e9273f5e/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:19 minikube cri-dockerd[1372]: time="2024-02-19T20:51:19Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/74856f1334a4ab77210919cb3d5be297bc188dae140f9eb73a23c596687f44aa/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:19 minikube cri-dockerd[1372]: time="2024-02-19T20:51:19Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/dc00bd2cce333629ea5398107d0bd5e2487ff88f303a5859532ac02036a398c1/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:38 minikube cri-dockerd[1372]: time="2024-02-19T20:51:38Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/9ae0384627c2bf5428767822606901424e1bc6d8a15d86719a20dbb79b4540be/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:38 minikube cri-dockerd[1372]: time="2024-02-19T20:51:38Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/ffbf53eb0fc9d33b1b2701b39a4c1223b9ce91b40e673865ea6abb68805a6e55/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:39 minikube cri-dockerd[1372]: time="2024-02-19T20:51:39Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/6aad6d3313ef26c2ab1b4c89195a1e10d5be78efa04abf3dcc4fb39313cb0334/resolv.conf as [nameserver 192.168.65.254 options ndots:0]"
Feb 19 20:51:45 minikube cri-dockerd[1372]: time="2024-02-19T20:51:45Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/89b9abaa43857c10875bd1821f1a1a58d9e39baa357b9b13ca46f0e4f7442120/resolv.conf as [nameserver 10.96.0.10 search kubernetes-dashboard.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Feb 19 20:51:45 minikube cri-dockerd[1372]: time="2024-02-19T20:51:45Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/1fcaa7af0cdd7e7e192146a2d8bf0a1e1c8eb5c51703c76122a12e45a6cde18c/resolv.conf as [nameserver 10.96.0.10 search kubernetes-dashboard.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Feb 19 20:51:46 minikube dockerd[1157]: time="2024-02-19T20:51:46.090505831Z" level=warning msg="reference for unknown type: " digest="sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c" remote="docker.io/kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c"
Feb 19 20:51:46 minikube cri-dockerd[1372]: time="2024-02-19T20:51:46Z" level=info msg="Docker cri received runtime config &RuntimeConfig{NetworkConfig:&NetworkConfig{PodCidr:10.244.0.0/24,},}"
Feb 19 20:51:50 minikube cri-dockerd[1372]: time="2024-02-19T20:51:50Z" level=info msg="Stop pulling image docker.io/kubernetesui/metrics-scraper:v1.0.8@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c: Status: Downloaded newer image for kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c"
Feb 19 20:51:50 minikube dockerd[1157]: time="2024-02-19T20:51:50.449043529Z" level=warning msg="reference for unknown type: " digest="sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93" remote="docker.io/kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93"
Feb 19 20:51:59 minikube dockerd[1157]: time="2024-02-19T20:51:59.914930347Z" level=info msg="ignoring event" container=f94903b33aa3f099f7076c062a8228eaeeaf1cc88da3d783ba8664bd5c140109 module=libcontainerd namespace=moby topic=/tasks/delete type="*events.TaskDelete"
Feb 19 20:52:01 minikube cri-dockerd[1372]: time="2024-02-19T20:52:01Z" level=info msg="Pulling image docker.io/kubernetesui/dashboard:v2.7.0@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93: ee3247c7e545: Extracting [=========================================>         ]  62.95MB/75.78MB"
Feb 19 20:52:02 minikube cri-dockerd[1372]: time="2024-02-19T20:52:02Z" level=info msg="Stop pulling image docker.io/kubernetesui/dashboard:v2.7.0@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93: Status: Downloaded newer image for kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93"
Feb 19 21:14:58 minikube dockerd[1157]: time="2024-02-19T21:14:58.482609937Z" level=warning msg="no trace recorder found, skipping"
Feb 19 21:39:00 minikube cri-dockerd[1372]: time="2024-02-19T21:39:00Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/29abe6be70a678cfc2efdd08779c141bd07965b8c0a68e6254994a241c4d8120/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Feb 19 21:39:00 minikube cri-dockerd[1372]: time="2024-02-19T21:39:00Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/57ca15bfe9696f1dad3cd105ce1265231532e061df79de932b0bae7becfa7ba7/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Feb 19 21:39:00 minikube cri-dockerd[1372]: time="2024-02-19T21:39:00Z" level=info msg="Will attempt to re-write config file /var/lib/docker/containers/3e7eda8e4d898c6fdf6e6167e421fa0d1ca7551258c2b1e05ddb3c9f627275ac/resolv.conf as [nameserver 10.96.0.10 search default.svc.cluster.local svc.cluster.local cluster.local options ndots:5]"
Feb 19 21:39:02 minikube dockerd[1157]: time="2024-02-19T21:39:02.606783365Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:02 minikube dockerd[1157]: time="2024-02-19T21:39:02.606843763Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:04 minikube dockerd[1157]: time="2024-02-19T21:39:04.106551446Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:04 minikube dockerd[1157]: time="2024-02-19T21:39:04.106655054Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:05 minikube dockerd[1157]: time="2024-02-19T21:39:05.606730150Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:05 minikube dockerd[1157]: time="2024-02-19T21:39:05.606790546Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:16 minikube dockerd[1157]: time="2024-02-19T21:39:16.451442881Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:16 minikube dockerd[1157]: time="2024-02-19T21:39:16.451484505Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:18 minikube dockerd[1157]: time="2024-02-19T21:39:18.091631934Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:18 minikube dockerd[1157]: time="2024-02-19T21:39:18.091806053Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:21 minikube dockerd[1157]: time="2024-02-19T21:39:21.440473433Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:21 minikube dockerd[1157]: time="2024-02-19T21:39:21.440744045Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:43 minikube dockerd[1157]: time="2024-02-19T21:39:43.436718552Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:43 minikube dockerd[1157]: time="2024-02-19T21:39:43.436815566Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:46 minikube dockerd[1157]: time="2024-02-19T21:39:46.395227586Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:46 minikube dockerd[1157]: time="2024-02-19T21:39:46.395336563Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:39:49 minikube dockerd[1157]: time="2024-02-19T21:39:49.412784653Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:39:49 minikube dockerd[1157]: time="2024-02-19T21:39:49.412940885Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:40:31 minikube dockerd[1157]: time="2024-02-19T21:40:31.426635700Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:40:31 minikube dockerd[1157]: time="2024-02-19T21:40:31.426728501Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:40:32 minikube dockerd[1157]: time="2024-02-19T21:40:32.936337595Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:40:32 minikube dockerd[1157]: time="2024-02-19T21:40:32.936467665Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:40:37 minikube dockerd[1157]: time="2024-02-19T21:40:37.402291072Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:40:37 minikube dockerd[1157]: time="2024-02-19T21:40:37.402376946Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:42:01 minikube dockerd[1157]: time="2024-02-19T21:42:01.430371509Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:42:01 minikube dockerd[1157]: time="2024-02-19T21:42:01.430644699Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:42:08 minikube dockerd[1157]: time="2024-02-19T21:42:08.496632104Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:42:08 minikube dockerd[1157]: time="2024-02-19T21:42:08.496676341Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:42:12 minikube dockerd[1157]: time="2024-02-19T21:42:12.416052566Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:42:12 minikube dockerd[1157]: time="2024-02-19T21:42:12.416171162Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:44:52 minikube dockerd[1157]: time="2024-02-19T21:44:52.427442378Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:44:52 minikube dockerd[1157]: time="2024-02-19T21:44:52.428202096Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:44:57 minikube dockerd[1157]: time="2024-02-19T21:44:57.417515042Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:44:57 minikube dockerd[1157]: time="2024-02-19T21:44:57.417598625Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"
Feb 19 21:44:59 minikube dockerd[1157]: time="2024-02-19T21:44:59.049535617Z" level=error msg="Not continuing with pull after error: errors:\ndenied: requested access to the resource is denied\nunauthorized: authentication required\n"
Feb 19 21:44:59 minikube dockerd[1157]: time="2024-02-19T21:44:59.049621256Z" level=info msg="Ignoring extra error returned from registry" error="unauthorized: authentication required"

* 
* ==> container status <==
* CONTAINER           IMAGE                                                                                                  CREATED             STATE               NAME                        ATTEMPT             POD ID              POD
2a810e5fa7fa9       kubernetesui/dashboard@sha256:2e500d29e9d5f4a086b908eb8dfe7ecac57d2ab09d65b24f588b1d449841ef93         54 minutes ago      Running             kubernetes-dashboard        0                   1fcaa7af0cdd7       kubernetes-dashboard-8694d4445c-hdg24
1a871908a98c5       6e38f40d628db                                                                                          54 minutes ago      Running             storage-provisioner         1                   9ae0384627c2b       storage-provisioner
7bcc22d54153b       kubernetesui/metrics-scraper@sha256:76049887f07a0476dc93efc2d3569b9529bf982b22d29f356092ce206e98765c   55 minutes ago      Running             dashboard-metrics-scraper   0                   89b9abaa43857       dashboard-metrics-scraper-7fd5cb4ddc-q44rc
4d4e845548013       ead0a4a53df89                                                                                          55 minutes ago      Running             coredns                     0                   6aad6d3313ef2       coredns-5dd5756b68-pkscp
539e471ce570c       bfc896cf80fba                                                                                          55 minutes ago      Running             kube-proxy                  0                   ffbf53eb0fc9d       kube-proxy-bfsbb
f94903b33aa3f       6e38f40d628db                                                                                          55 minutes ago      Exited              storage-provisioner         0                   9ae0384627c2b       storage-provisioner
d5f97b00ae160       6d1b4fd1b182d                                                                                          55 minutes ago      Running             kube-scheduler              0                   74856f1334a4a       kube-scheduler-minikube
3690ab58b93de       73deb9a3f7025                                                                                          55 minutes ago      Running             etcd                        0                   dc00bd2cce333       etcd-minikube
44d47c49bbb55       10baa1ca17068                                                                                          55 minutes ago      Running             kube-controller-manager     0                   d101426c3933d       kube-controller-manager-minikube
85a72ef61f516       5374347291230                                                                                          55 minutes ago      Running             kube-apiserver              0                   685c566d0c1cc       kube-apiserver-minikube

* 
* ==> coredns [4d4e84554801] <==
* [INFO] plugin/ready: Still waiting on: "kubernetes"
.:53
[INFO] plugin/reload: Running configuration SHA512 = f869070685748660180df1b7a47d58cdafcf2f368266578c062d1151dc2c900964aecc5975e8882e6de6fdfb6460463e30ebfaad2ec8f0c3c6436f80225b3b5b
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
[INFO] 127.0.0.1:51350 - 55106 "HINFO IN 5628986147264150691.3207414654345460359. udp 57 false 512" NXDOMAIN qr,rd,ra 57 0.071602879s

* 
* ==> describe nodes <==
* Name:               minikube
Roles:              control-plane
Labels:             beta.kubernetes.io/arch=amd64
                    beta.kubernetes.io/os=linux
                    kubernetes.io/arch=amd64
                    kubernetes.io/hostname=minikube
                    kubernetes.io/os=linux
                    minikube.k8s.io/commit=8220a6eb95f0a4d75f7f2d7b14cef975f050512d
                    minikube.k8s.io/name=minikube
                    minikube.k8s.io/primary=true
                    minikube.k8s.io/updated_at=2024_02_19T21_51_26_0700
                    minikube.k8s.io/version=v1.32.0
                    node-role.kubernetes.io/control-plane=
                    node.kubernetes.io/exclude-from-external-load-balancers=
Annotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/cri-dockerd.sock
                    node.alpha.kubernetes.io/ttl: 0
                    volumes.kubernetes.io/controller-managed-attach-detach: true
CreationTimestamp:  Mon, 19 Feb 2024 20:51:23 +0000
Taints:             <none>
Unschedulable:      false
Lease:
  HolderIdentity:  minikube
  AcquireTime:     <unset>
  RenewTime:       Mon, 19 Feb 2024 21:46:53 +0000
Conditions:
  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message
  ----             ------  -----------------                 ------------------                ------                       -------
  MemoryPressure   False   Mon, 19 Feb 2024 21:46:15 +0000   Mon, 19 Feb 2024 20:51:21 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available
  DiskPressure     False   Mon, 19 Feb 2024 21:46:15 +0000   Mon, 19 Feb 2024 20:51:21 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure
  PIDPressure      False   Mon, 19 Feb 2024 21:46:15 +0000   Mon, 19 Feb 2024 20:51:21 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available
  Ready            True    Mon, 19 Feb 2024 21:46:15 +0000   Mon, 19 Feb 2024 20:51:36 +0000   KubeletReady                 kubelet is posting ready status
Addresses:
  InternalIP:  192.168.49.2
  Hostname:    minikube
Capacity:
  cpu:                12
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7969944Ki
  pods:               110
Allocatable:
  cpu:                12
  ephemeral-storage:  1055762868Ki
  hugepages-1Gi:      0
  hugepages-2Mi:      0
  memory:             7969944Ki
  pods:               110
System Info:
  Machine ID:                 1565e4d13b7f4f72b99ef0bd83686b06
  System UUID:                1565e4d13b7f4f72b99ef0bd83686b06
  Boot ID:                    24579539-8af3-4dfd-84ee-7b8d28265c9f
  Kernel Version:             5.15.133.1-microsoft-standard-WSL2
  OS Image:                   Ubuntu 22.04.3 LTS
  Operating System:           linux
  Architecture:               amd64
  Container Runtime Version:  docker://24.0.7
  Kubelet Version:            v1.28.3
  Kube-Proxy Version:         v1.28.3
PodCIDR:                      10.244.0.0/24
PodCIDRs:                     10.244.0.0/24
Non-terminated Pods:          (12 in total)
  Namespace                   Name                                          CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age
  ---------                   ----                                          ------------  ----------  ---------------  -------------  ---
  default                     frontend-deployment-6dd9785f79-59zxc          0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         7m56s
  default                     frontend-deployment-6dd9785f79-hq5qz          0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         7m56s
  default                     frontend-deployment-6dd9785f79-r5pt7          0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         7m56s
  kube-system                 coredns-5dd5756b68-pkscp                      100m (0%!)(MISSING)     0 (0%!)(MISSING)      70Mi (0%!)(MISSING)        170Mi (2%!)(MISSING)     55m
  kube-system                 etcd-minikube                                 100m (0%!)(MISSING)     0 (0%!)(MISSING)      100Mi (1%!)(MISSING)       0 (0%!)(MISSING)         55m
  kube-system                 kube-apiserver-minikube                       250m (2%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kube-system                 kube-controller-manager-minikube              200m (1%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kube-system                 kube-proxy-bfsbb                              0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kube-system                 kube-scheduler-minikube                       100m (0%!)(MISSING)     0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kube-system                 storage-provisioner                           0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kubernetes-dashboard        dashboard-metrics-scraper-7fd5cb4ddc-q44rc    0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
  kubernetes-dashboard        kubernetes-dashboard-8694d4445c-hdg24         0 (0%!)(MISSING)        0 (0%!)(MISSING)      0 (0%!)(MISSING)           0 (0%!)(MISSING)         55m
Allocated resources:
  (Total limits may be over 100 percent, i.e., overcommitted.)
  Resource           Requests    Limits
  --------           --------    ------
  cpu                750m (6%!)(MISSING)   0 (0%!)(MISSING)
  memory             170Mi (2%!)(MISSING)  170Mi (2%!)(MISSING)
  ephemeral-storage  0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-1Gi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
  hugepages-2Mi      0 (0%!)(MISSING)      0 (0%!)(MISSING)
Events:
  Type    Reason                   Age   From             Message
  ----    ------                   ----  ----             -------
  Normal  Starting                 55m   kube-proxy       
  Normal  Starting                 55m   kubelet          Starting kubelet.
  Normal  NodeHasSufficientMemory  55m   kubelet          Node minikube status is now: NodeHasSufficientMemory
  Normal  NodeHasNoDiskPressure    55m   kubelet          Node minikube status is now: NodeHasNoDiskPressure
  Normal  NodeHasSufficientPID     55m   kubelet          Node minikube status is now: NodeHasSufficientPID
  Normal  NodeNotReady             55m   kubelet          Node minikube status is now: NodeNotReady
  Normal  NodeAllocatableEnforced  55m   kubelet          Updated Node Allocatable limit across pods
  Normal  NodeReady                55m   kubelet          Node minikube status is now: NodeReady
  Normal  RegisteredNode           55m   node-controller  Node minikube event: Registered Node minikube in Controller

* 
* ==> dmesg <==
* [Feb19 12:03] PCI: Fatal: No config space access function found
[  +0.010353] PCI: System does not support PCI
[  +0.176115] kvm: already loaded the other module
[  +1.371841] FS-Cache: Duplicate cookie detected
[  +0.000519] FS-Cache: O-cookie c=00000004 [p=00000002 fl=222 nc=0 na=1]
[  +0.000480] FS-Cache: O-cookie d=00000000a1cf1281{9P.session} n=000000004c5162fd
[  +0.000701] FS-Cache: O-key=[10] '34323934393337343534'
[  +0.000465] FS-Cache: N-cookie c=00000005 [p=00000002 fl=2 nc=0 na=1]
[  +0.000718] FS-Cache: N-cookie d=00000000a1cf1281{9P.session} n=00000000c35a3c70
[  +0.000754] FS-Cache: N-key=[10] '34323934393337343534'
[  +0.369566] WSL (1) ERROR: ConfigApplyWindowsLibPath:2529: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000005]  failed 2
[  +0.013123] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Berlin not found. Is the tzdata package installed?
[  +0.255141] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000842] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000861] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000933] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.013920] Exception: 
[  +0.000003] Operation canceled @p9io.cpp:258 (AcceptAsync)

[  +0.008781] blk_update_request: I/O error, dev sdc, sector 0 op 0x1:(WRITE) flags 0x800 phys_seg 0 prio class 0
[  +0.002619] blk_update_request: I/O error, dev sdc, sector 0 op 0x1:(WRITE) flags 0x800 phys_seg 0 prio class 0
[  +0.001255] Buffer I/O error on dev sdc, logical block 134184960, lost sync page write
[  +0.000640] JBD2: Error -5 detected when updating journal superblock for sdc-8.
[  +0.000615] Aborting journal on device sdc-8.
[  +0.000481] Buffer I/O error on dev sdc, logical block 134184960, lost sync page write
[  +0.000683] JBD2: Error -5 detected when updating journal superblock for sdc-8.
[  +0.000660] EXT4-fs error (device sdc): ext4_put_super:1196: comm Xwayland: Couldn't clean up the journal
[  +0.000728] EXT4-fs (sdc): Remounting filesystem read-only
[  +1.267065] WSL (2) ERROR: UtilCreateProcessAndWait:663: /bin/mount failed with 2
[  +0.001190] WSL (1) ERROR: UtilCreateProcessAndWait:685: /bin/mount failed with status 0xff00

[  +0.001415] WSL (1) ERROR: ConfigMountFsTab:2581: Processing fstab with mount -a failed.
[  +0.002355] WSL (1) ERROR: ConfigApplyWindowsLibPath:2529: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000004]  failed 2
[  +0.059176] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Berlin not found. Is the tzdata package installed?
[  +0.087152] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000769] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000688] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000754] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.230934] WSL (1) ERROR: ConfigApplyWindowsLibPath:2529: open /etc/ld.so.conf.d/ld.wsl.conf
[  +0.000005]  failed 2
[  +0.020086] WSL (1) WARNING: /usr/share/zoneinfo/Europe/Berlin not found. Is the tzdata package installed?
[  +0.126090] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.000995] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.002861] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.001271] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.565767] netlink: 'init': attribute type 4 has an invalid length.
[  +0.518679] kmem.limit_in_bytes is deprecated and will be removed. Please report your usecase to linux-mm@kvack.org if you depend on this functionality.
[  +5.977639] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.006816] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.006096] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -22
[  +0.017485] misc dxg: dxgk: dxgkio_query_adapter_info: Ioctl failed: -2
[  +0.026508] new mount options do not match the existing superblock, will be ignored
[  +0.220888] Failed to connect to bus: No such file or directory

* 
* ==> etcd [3690ab58b93d] <==
* {"level":"info","ts":"2024-02-19T20:51:19.721802Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc switched to configuration voters=(12593026477526642892)"}
{"level":"info","ts":"2024-02-19T20:51:19.722223Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","added-peer-id":"aec36adc501070cc","added-peer-peer-urls":["https://192.168.49.2:2380"]}
{"level":"info","ts":"2024-02-19T20:51:19.73032Z","caller":"embed/etcd.go:726","msg":"starting with client TLS","tls-info":"cert = /var/lib/minikube/certs/etcd/server.crt, key = /var/lib/minikube/certs/etcd/server.key, client-cert=, client-key=, trusted-ca = /var/lib/minikube/certs/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2024-02-19T20:51:19.7307Z","caller":"embed/etcd.go:278","msg":"now serving peer/client/metrics","local-member-id":"aec36adc501070cc","initial-advertise-peer-urls":["https://192.168.49.2:2380"],"listen-peer-urls":["https://192.168.49.2:2380"],"advertise-client-urls":["https://192.168.49.2:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://192.168.49.2:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2024-02-19T20:51:19.730742Z","caller":"embed/etcd.go:855","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2024-02-19T20:51:19.730766Z","caller":"embed/etcd.go:597","msg":"serving peer traffic","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-02-19T20:51:19.73093Z","caller":"embed/etcd.go:569","msg":"cmux::serve","address":"192.168.49.2:2380"}
{"level":"info","ts":"2024-02-19T20:51:19.82702Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc is starting a new election at term 1"}
{"level":"info","ts":"2024-02-19T20:51:19.827167Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became pre-candidate at term 1"}
{"level":"info","ts":"2024-02-19T20:51:19.827222Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgPreVoteResp from aec36adc501070cc at term 1"}
{"level":"info","ts":"2024-02-19T20:51:19.827258Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became candidate at term 2"}
{"level":"info","ts":"2024-02-19T20:51:19.827284Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc received MsgVoteResp from aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-02-19T20:51:19.82731Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"aec36adc501070cc became leader at term 2"}
{"level":"info","ts":"2024-02-19T20:51:19.827331Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: aec36adc501070cc elected leader aec36adc501070cc at term 2"}
{"level":"info","ts":"2024-02-19T20:51:19.831457Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"aec36adc501070cc","local-member-attributes":"{Name:minikube ClientURLs:[https://192.168.49.2:2379]}","request-path":"/0/members/aec36adc501070cc/attributes","cluster-id":"fa54960ea34d58be","publish-timeout":"7s"}
{"level":"info","ts":"2024-02-19T20:51:19.838196Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-19T20:51:19.839891Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-02-19T20:51:19.840899Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"127.0.0.1:2379"}
{"level":"info","ts":"2024-02-19T20:51:19.84098Z","caller":"embed/serve.go:103","msg":"ready to serve client requests"}
{"level":"info","ts":"2024-02-19T20:51:19.841565Z","caller":"embed/serve.go:250","msg":"serving client traffic securely","traffic":"grpc+http","address":"192.168.49.2:2379"}
{"level":"info","ts":"2024-02-19T20:51:19.895477Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"fa54960ea34d58be","local-member-id":"aec36adc501070cc","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-19T20:51:19.895599Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-19T20:51:19.895625Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
{"level":"info","ts":"2024-02-19T20:51:19.895687Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2024-02-19T20:51:19.895694Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"warn","ts":"2024-02-19T20:51:23.106644Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"107.272075ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/namespaces/kube-system\" ","response":"range_response_count:0 size:4"}
{"level":"info","ts":"2024-02-19T20:51:23.106813Z","caller":"traceutil/trace.go:171","msg":"trace[1062041817] range","detail":"{range_begin:/registry/namespaces/kube-system; range_end:; response_count:0; response_revision:9; }","duration":"107.440799ms","start":"2024-02-19T20:51:22.999344Z","end":"2024-02-19T20:51:23.106785Z","steps":["trace[1062041817] 'agreement among raft nodes before linearized reading'  (duration: 107.242844ms)"],"step_count":1}
{"level":"warn","ts":"2024-02-19T20:51:23.10662Z","caller":"etcdserver/util.go:170","msg":"apply request took too long","took":"104.076255ms","expected-duration":"100ms","prefix":"read-only range ","request":"key:\"/registry/masterleases/192.168.49.2\" ","response":"range_response_count:0 size:4"}
{"level":"info","ts":"2024-02-19T20:51:23.107047Z","caller":"traceutil/trace.go:171","msg":"trace[1181683857] range","detail":"{range_begin:/registry/masterleases/192.168.49.2; range_end:; response_count:0; response_revision:9; }","duration":"104.52111ms","start":"2024-02-19T20:51:23.002496Z","end":"2024-02-19T20:51:23.107018Z","steps":["trace[1181683857] 'agreement among raft nodes before linearized reading'  (duration: 103.947176ms)"],"step_count":1}
{"level":"info","ts":"2024-02-19T21:01:20.707736Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":675}
{"level":"info","ts":"2024-02-19T21:01:20.709176Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":675,"took":"1.035542ms","hash":1278777679}
{"level":"info","ts":"2024-02-19T21:01:20.709256Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1278777679,"revision":675,"compact-revision":-1}
{"level":"info","ts":"2024-02-19T21:06:20.710891Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":916}
{"level":"info","ts":"2024-02-19T21:06:20.711773Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":916,"took":"562.427µs","hash":2394162723}
{"level":"info","ts":"2024-02-19T21:06:20.711813Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":2394162723,"revision":916,"compact-revision":675}
{"level":"info","ts":"2024-02-19T21:11:20.717609Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1156}
{"level":"info","ts":"2024-02-19T21:11:20.718309Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1156,"took":"440.949µs","hash":388019498}
{"level":"info","ts":"2024-02-19T21:11:20.718359Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":388019498,"revision":1156,"compact-revision":916}
{"level":"info","ts":"2024-02-19T21:14:46.396578Z","caller":"traceutil/trace.go:171","msg":"trace[701230156] transaction","detail":"{read_only:false; response_revision:1560; number_of_response:1; }","duration":"107.494661ms","start":"2024-02-19T21:14:46.28884Z","end":"2024-02-19T21:14:46.396335Z","steps":["trace[701230156] 'process raft request'  (duration: 107.359166ms)"],"step_count":1}
{"level":"info","ts":"2024-02-19T21:16:20.723944Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1396}
{"level":"info","ts":"2024-02-19T21:16:20.724972Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1396,"took":"733.866µs","hash":1438279854}
{"level":"info","ts":"2024-02-19T21:16:20.725072Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1438279854,"revision":1396,"compact-revision":1156}
{"level":"info","ts":"2024-02-19T21:21:20.729997Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1635}
{"level":"info","ts":"2024-02-19T21:21:20.730801Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1635,"took":"552.65µs","hash":893597455}
{"level":"info","ts":"2024-02-19T21:21:20.730839Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":893597455,"revision":1635,"compact-revision":1396}
{"level":"info","ts":"2024-02-19T21:26:20.740992Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":1875}
{"level":"info","ts":"2024-02-19T21:26:20.742109Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":1875,"took":"797.904µs","hash":872008128}
{"level":"info","ts":"2024-02-19T21:26:20.742173Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":872008128,"revision":1875,"compact-revision":1635}
{"level":"info","ts":"2024-02-19T21:31:20.751746Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2115}
{"level":"info","ts":"2024-02-19T21:31:20.753644Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2115,"took":"719.604µs","hash":549803048}
{"level":"info","ts":"2024-02-19T21:31:20.75372Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":549803048,"revision":2115,"compact-revision":1875}
{"level":"info","ts":"2024-02-19T21:36:20.76078Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2355}
{"level":"info","ts":"2024-02-19T21:36:20.761669Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2355,"took":"531.607µs","hash":1872550953}
{"level":"info","ts":"2024-02-19T21:36:20.761718Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":1872550953,"revision":2355,"compact-revision":2115}
{"level":"info","ts":"2024-02-19T21:41:20.765692Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2596}
{"level":"info","ts":"2024-02-19T21:41:20.767634Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2596,"took":"995.775µs","hash":3970606033}
{"level":"info","ts":"2024-02-19T21:41:20.76771Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":3970606033,"revision":2596,"compact-revision":2355}
{"level":"info","ts":"2024-02-19T21:46:20.775722Z","caller":"mvcc/index.go:214","msg":"compact tree index","revision":2957}
{"level":"info","ts":"2024-02-19T21:46:20.777461Z","caller":"mvcc/kvstore_compaction.go:66","msg":"finished scheduled compaction","compact-revision":2957,"took":"1.16169ms","hash":25633370}
{"level":"info","ts":"2024-02-19T21:46:20.777533Z","caller":"mvcc/hash.go:137","msg":"storing new hash","hash":25633370,"revision":2957,"compact-revision":2596}

* 
* ==> kernel <==
*  21:46:55 up  9:43,  0 users,  load average: 0.19, 0.31, 0.34
Linux minikube 5.15.133.1-microsoft-standard-WSL2 #1 SMP Thu Oct 5 21:02:42 UTC 2023 x86_64 x86_64 x86_64 GNU/Linux
PRETTY_NAME="Ubuntu 22.04.3 LTS"

* 
* ==> kube-apiserver [85a72ef61f51] <==
* I0219 20:51:22.719468       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0219 20:51:22.719501       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I0219 20:51:22.719520       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/var/lib/minikube/certs/ca.crt"
I0219 20:51:22.719555       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I0219 20:51:22.719589       1 available_controller.go:423] Starting AvailableConditionController
I0219 20:51:22.719602       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I0219 20:51:22.719621       1 controller.go:78] Starting OpenAPI AggregationController
I0219 20:51:22.719661       1 gc_controller.go:78] Starting apiserver lease garbage collector
I0219 20:51:22.719668       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/var/lib/minikube/certs/front-proxy-ca.crt"
I0219 20:51:22.719697       1 aggregator.go:164] waiting for initial CRD sync...
I0219 20:51:22.719720       1 apf_controller.go:372] Starting API Priority and Fairness config controller
I0219 20:51:22.719729       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I0219 20:51:22.719740       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I0219 20:51:22.719782       1 controller.go:116] Starting legacy_token_tracking_controller
I0219 20:51:22.719787       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I0219 20:51:22.719789       1 system_namespaces_controller.go:67] Starting system namespaces controller
I0219 20:51:22.719837       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/var/lib/minikube/certs/front-proxy-client.crt::/var/lib/minikube/certs/front-proxy-client.key"
I0219 20:51:22.719601       1 handler_discovery.go:412] Starting ResourceDiscoveryManager
I0219 20:51:22.724473       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I0219 20:51:22.724629       1 controller.go:134] Starting OpenAPI controller
I0219 20:51:22.724720       1 naming_controller.go:291] Starting NamingConditionController
I0219 20:51:22.724781       1 establishing_controller.go:76] Starting EstablishingController
I0219 20:51:22.724814       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I0219 20:51:22.724860       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I0219 20:51:22.724916       1 crd_finalizer.go:266] Starting CRDFinalizer
I0219 20:51:22.724983       1 controller.go:85] Starting OpenAPI V3 controller
I0219 20:51:22.898606       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I0219 20:51:22.903480       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I0219 20:51:22.719792       1 controller.go:80] Starting OpenAPI V3 AggregationController
I0219 20:51:22.996171       1 shared_informer.go:318] Caches are synced for crd-autoregister
I0219 20:51:22.996323       1 aggregator.go:166] initial CRD sync complete...
I0219 20:51:22.997229       1 autoregister_controller.go:141] Starting autoregister controller
I0219 20:51:22.998631       1 cache.go:32] Waiting for caches to sync for autoregister controller
I0219 20:51:22.998678       1 cache.go:39] Caches are synced for autoregister controller
I0219 20:51:22.997514       1 shared_informer.go:318] Caches are synced for configmaps
I0219 20:51:23.000556       1 cache.go:39] Caches are synced for AvailableConditionController controller
I0219 20:51:23.010466       1 shared_informer.go:318] Caches are synced for node_authorizer
I0219 20:51:23.013315       1 controller.go:624] quota admission added evaluator for: namespaces
I0219 20:51:23.096307       1 apf_controller.go:377] Running API Priority and Fairness config worker
I0219 20:51:23.096349       1 apf_controller.go:380] Running API Priority and Fairness periodic rebalancing process
E0219 20:51:23.113533       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I0219 20:51:23.399155       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I0219 20:51:23.726146       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I0219 20:51:23.729665       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I0219 20:51:23.729688       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I0219 20:51:24.172834       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I0219 20:51:24.211855       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I0219 20:51:24.306908       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs={"IPv4":"10.96.0.1"}
W0219 20:51:24.323823       1 lease.go:263] Resetting endpoints for master service "kubernetes" to [192.168.49.2]
I0219 20:51:24.324967       1 controller.go:624] quota admission added evaluator for: endpoints
I0219 20:51:24.329413       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I0219 20:51:24.819781       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I0219 20:51:25.759825       1 controller.go:624] quota admission added evaluator for: deployments.apps
I0219 20:51:25.769912       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs={"IPv4":"10.96.0.10"}
I0219 20:51:25.779207       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I0219 20:51:38.526666       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I0219 20:51:38.576079       1 controller.go:624] quota admission added evaluator for: replicasets.apps
I0219 20:51:45.115304       1 alloc.go:330] "allocated clusterIPs" service="kubernetes-dashboard/kubernetes-dashboard" clusterIPs={"IPv4":"10.102.68.105"}
I0219 20:51:45.210017       1 alloc.go:330] "allocated clusterIPs" service="kubernetes-dashboard/dashboard-metrics-scraper" clusterIPs={"IPv4":"10.100.191.0"}
I0219 21:43:51.624956       1 alloc.go:330] "allocated clusterIPs" service="default/frontend-service" clusterIPs={"IPv4":"10.100.199.57"}

* 
* ==> kube-controller-manager [44d47c49bbb5] <==
* I0219 20:51:44.831398       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="14.827804ms"
I0219 20:51:44.896972       1 event.go:307] "Event occurred" object="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kubernetes-dashboard-8694d4445c-hdg24"
I0219 20:51:44.914170       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="82.713983ms"
I0219 20:51:44.914320       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="66.423µs"
I0219 20:51:44.914363       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="25.424µs"
I0219 20:51:44.914513       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="70.438µs"
I0219 20:51:44.914572       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="80.909195ms"
I0219 20:51:45.011967       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="97.255221ms"
I0219 20:51:45.012284       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="111.102µs"
I0219 20:51:45.022875       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="111.821µs"
I0219 20:51:50.785070       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="11.037698ms"
I0219 20:51:50.786348       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/dashboard-metrics-scraper-7fd5cb4ddc" duration="158.946µs"
I0219 20:52:02.903810       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="8.123809ms"
I0219 20:52:02.904148       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="kubernetes-dashboard/kubernetes-dashboard-8694d4445c" duration="137.071µs"
I0219 21:38:59.806136       1 event.go:307] "Event occurred" object="default/frontend-deployment" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set frontend-deployment-6dd9785f79 to 3"
I0219 21:38:59.819871       1 event.go:307] "Event occurred" object="default/frontend-deployment-6dd9785f79" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: frontend-deployment-6dd9785f79-r5pt7"
I0219 21:38:59.826994       1 event.go:307] "Event occurred" object="default/frontend-deployment-6dd9785f79" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: frontend-deployment-6dd9785f79-hq5qz"
I0219 21:38:59.827120       1 event.go:307] "Event occurred" object="default/frontend-deployment-6dd9785f79" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: frontend-deployment-6dd9785f79-59zxc"
I0219 21:38:59.842862       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="37.415573ms"
I0219 21:38:59.881777       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="38.821119ms"
I0219 21:38:59.881995       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="139.902µs"
I0219 21:38:59.885968       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="129.274µs"
I0219 21:38:59.893568       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="54.405µs"
I0219 21:38:59.902190       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="98.71µs"
I0219 21:39:02.853249       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="89.906µs"
I0219 21:39:04.872396       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="504.287µs"
I0219 21:39:05.875898       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="35.174µs"
I0219 21:39:14.915847       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="188.047µs"
I0219 21:39:15.915092       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="270.523µs"
I0219 21:39:19.914375       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="314.979µs"
I0219 21:39:27.914522       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="36.3µs"
I0219 21:39:31.914771       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="52.756µs"
I0219 21:39:32.915307       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="38.455µs"
I0219 21:39:41.913172       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="49.774µs"
I0219 21:39:44.909288       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="55.003µs"
I0219 21:39:47.912341       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="409.562µs"
I0219 21:39:53.916309       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="131.831µs"
I0219 21:39:57.912424       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="60.305µs"
I0219 21:40:02.911339       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="41.356µs"
I0219 21:40:04.908848       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="140.258µs"
I0219 21:40:09.908199       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="269.332µs"
I0219 21:40:16.910086       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="35.903µs"
I0219 21:40:42.911316       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="537.424µs"
I0219 21:40:45.912333       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="39.779µs"
I0219 21:40:49.910547       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="34.204µs"
I0219 21:40:55.909084       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="30.374µs"
I0219 21:41:00.910449       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="33.304µs"
I0219 21:41:04.912012       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="40.315µs"
I0219 21:42:14.909161       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="153.65µs"
I0219 21:42:19.911532       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="129.827µs"
I0219 21:42:26.909910       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="75.411µs"
I0219 21:42:28.904698       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="53.747µs"
I0219 21:42:30.905428       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="76.164µs"
I0219 21:42:37.912027       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="83.727µs"
I0219 21:45:06.908221       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="238.424µs"
I0219 21:45:08.907699       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="56.597µs"
I0219 21:45:14.906320       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="290.321µs"
I0219 21:45:20.910309       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="52.064µs"
I0219 21:45:22.905809       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="211.66µs"
I0219 21:45:28.907979       1 replica_set.go:676] "Finished syncing" kind="ReplicaSet" key="default/frontend-deployment-6dd9785f79" duration="35.054µs"

* 
* ==> kube-proxy [539e471ce570] <==
* I0219 20:51:39.132041       1 server_others.go:69] "Using iptables proxy"
I0219 20:51:39.140592       1 node.go:141] Successfully retrieved node IP: 192.168.49.2
I0219 20:51:39.157128       1 server.go:632] "kube-proxy running in dual-stack mode" primary ipFamily="IPv4"
I0219 20:51:39.159095       1 server_others.go:152] "Using iptables Proxier"
I0219 20:51:39.159179       1 server_others.go:421] "Detect-local-mode set to ClusterCIDR, but no cluster CIDR for family" ipFamily="IPv6"
I0219 20:51:39.159193       1 server_others.go:438] "Defaulting to no-op detect-local"
I0219 20:51:39.159354       1 proxier.go:251] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I0219 20:51:39.159818       1 server.go:846] "Version info" version="v1.28.3"
I0219 20:51:39.159842       1 server.go:848] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0219 20:51:39.160635       1 config.go:315] "Starting node config controller"
I0219 20:51:39.160652       1 shared_informer.go:311] Waiting for caches to sync for node config
I0219 20:51:39.196648       1 config.go:188] "Starting service config controller"
I0219 20:51:39.196742       1 shared_informer.go:311] Waiting for caches to sync for service config
I0219 20:51:39.196875       1 config.go:97] "Starting endpoint slice config controller"
I0219 20:51:39.196935       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I0219 20:51:39.297100       1 shared_informer.go:318] Caches are synced for node config
I0219 20:51:39.297156       1 shared_informer.go:318] Caches are synced for service config
I0219 20:51:39.297233       1 shared_informer.go:318] Caches are synced for endpoint slice config

* 
* ==> kube-scheduler [d5f97b00ae16] <==
* I0219 20:51:20.904301       1 serving.go:348] Generated self-signed cert in-memory
W0219 20:51:22.905699       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W0219 20:51:22.905750       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W0219 20:51:22.905764       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W0219 20:51:22.905770       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I0219 20:51:23.104549       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.28.3"
I0219 20:51:23.104662       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I0219 20:51:23.108232       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I0219 20:51:23.108329       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I0219 20:51:23.111157       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I0219 20:51:23.111357       1 secure_serving.go:213] Serving securely on 127.0.0.1:10259
W0219 20:51:23.195989       1 reflector.go:535] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E0219 20:51:23.196091       1 reflector.go:147] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W0219 20:51:23.196998       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E0219 20:51:23.197175       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W0219 20:51:23.197285       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0219 20:51:23.196998       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0219 20:51:23.197391       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E0219 20:51:23.197500       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W0219 20:51:23.197662       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E0219 20:51:23.197786       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W0219 20:51:23.197821       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E0219 20:51:23.197855       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W0219 20:51:23.197858       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E0219 20:51:23.197914       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W0219 20:51:23.198062       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E0219 20:51:23.198118       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W0219 20:51:23.198427       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E0219 20:51:23.200191       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W0219 20:51:23.199113       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E0219 20:51:23.200581       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W0219 20:51:23.200590       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E0219 20:51:23.200663       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
W0219 20:51:23.202296       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E0219 20:51:23.202369       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W0219 20:51:23.202412       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W0219 20:51:23.202415       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E0219 20:51:23.202427       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
E0219 20:51:23.202432       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W0219 20:51:23.202508       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E0219 20:51:23.202562       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W0219 20:51:24.012935       1 reflector.go:535] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E0219 20:51:24.012971       1 reflector.go:147] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
I0219 20:51:24.609192       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file

* 
* ==> kubelet <==
* Feb 19 21:43:19 minikube kubelet[2538]: E0219 21:43:19.897567    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:43:20 minikube kubelet[2538]: E0219 21:43:20.898526    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:43:24 minikube kubelet[2538]: E0219 21:43:24.896338    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:43:31 minikube kubelet[2538]: E0219 21:43:31.897188    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:43:34 minikube kubelet[2538]: E0219 21:43:34.895960    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:43:35 minikube kubelet[2538]: E0219 21:43:35.916545    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:43:44 minikube kubelet[2538]: E0219 21:43:44.898344    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:43:49 minikube kubelet[2538]: E0219 21:43:49.900148    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:43:49 minikube kubelet[2538]: E0219 21:43:49.900285    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:43:56 minikube kubelet[2538]: E0219 21:43:56.897891    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:44:02 minikube kubelet[2538]: E0219 21:44:02.898616    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:44:03 minikube kubelet[2538]: E0219 21:44:03.897624    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:44:11 minikube kubelet[2538]: E0219 21:44:11.900266    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:44:15 minikube kubelet[2538]: E0219 21:44:15.900569    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:44:17 minikube kubelet[2538]: E0219 21:44:17.898727    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:44:24 minikube kubelet[2538]: E0219 21:44:24.898330    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:44:28 minikube kubelet[2538]: E0219 21:44:28.898162    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:44:29 minikube kubelet[2538]: E0219 21:44:29.898511    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:44:39 minikube kubelet[2538]: E0219 21:44:39.898499    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:44:40 minikube kubelet[2538]: E0219 21:44:40.897476    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:44:43 minikube kubelet[2538]: E0219 21:44:43.899072    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:44:52 minikube kubelet[2538]: E0219 21:44:52.435610    2538 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:52 minikube kubelet[2538]: E0219 21:44:52.435682    2538 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:52 minikube kubelet[2538]: E0219 21:44:52.435800    2538 kuberuntime_manager.go:1256] container &Container{Name:frontend-server,Image:frontend:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:4200,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-mrgmz,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod frontend-deployment-6dd9785f79-r5pt7_default(fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a): ErrImagePull: Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Feb 19 21:44:52 minikube kubelet[2538]: E0219 21:44:52.435838    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ErrImagePull: \"Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:44:57 minikube kubelet[2538]: E0219 21:44:57.422544    2538 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:57 minikube kubelet[2538]: E0219 21:44:57.422604    2538 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:57 minikube kubelet[2538]: E0219 21:44:57.422799    2538 kuberuntime_manager.go:1256] container &Container{Name:frontend-server,Image:frontend:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:4200,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-h9flb,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod frontend-deployment-6dd9785f79-59zxc_default(74f31aad-7c61-46fe-bf37-7b0a9ea8ce13): ErrImagePull: Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Feb 19 21:44:57 minikube kubelet[2538]: E0219 21:44:57.422854    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ErrImagePull: \"Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:44:59 minikube kubelet[2538]: E0219 21:44:59.056581    2538 remote_image.go:180] "PullImage from image service failed" err="rpc error: code = Unknown desc = Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:59 minikube kubelet[2538]: E0219 21:44:59.056634    2538 kuberuntime_image.go:53] "Failed to pull image" err="Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied" image="frontend:latest"
Feb 19 21:44:59 minikube kubelet[2538]: E0219 21:44:59.056699    2538 kuberuntime_manager.go:1256] container &Container{Name:frontend-server,Image:frontend:latest,Command:[],Args:[],WorkingDir:,Ports:[]ContainerPort{ContainerPort{Name:,HostPort:0,ContainerPort:4200,Protocol:TCP,HostIP:,},},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-qkdl8,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:Always,SecurityContext:nil,Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,} start failed in pod frontend-deployment-6dd9785f79-hq5qz_default(be60b495-e814-4c3b-a4c1-30cc7ca77a0c): ErrImagePull: Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
Feb 19 21:44:59 minikube kubelet[2538]: E0219 21:44:59.056732    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ErrImagePull: \"Error response from daemon: pull access denied for frontend, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:45:06 minikube kubelet[2538]: E0219 21:45:06.897722    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:45:08 minikube kubelet[2538]: E0219 21:45:08.898495    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:45:14 minikube kubelet[2538]: E0219 21:45:14.897948    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:45:20 minikube kubelet[2538]: E0219 21:45:20.899690    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:45:22 minikube kubelet[2538]: E0219 21:45:22.898096    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:45:28 minikube kubelet[2538]: E0219 21:45:28.898413    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:45:34 minikube kubelet[2538]: E0219 21:45:34.897792    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:45:36 minikube kubelet[2538]: E0219 21:45:36.897367    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:45:41 minikube kubelet[2538]: E0219 21:45:41.896410    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:45:48 minikube kubelet[2538]: E0219 21:45:48.897106    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:45:49 minikube kubelet[2538]: E0219 21:45:49.899491    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:45:56 minikube kubelet[2538]: E0219 21:45:56.899264    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:46:01 minikube kubelet[2538]: E0219 21:46:01.898881    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:46:02 minikube kubelet[2538]: E0219 21:46:02.894970    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:46:07 minikube kubelet[2538]: E0219 21:46:07.898492    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:46:12 minikube kubelet[2538]: E0219 21:46:12.897798    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:46:15 minikube kubelet[2538]: E0219 21:46:15.898151    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:46:18 minikube kubelet[2538]: E0219 21:46:18.896267    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:46:25 minikube kubelet[2538]: E0219 21:46:25.902153    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:46:26 minikube kubelet[2538]: W0219 21:46:26.329999    2538 sysinfo.go:203] Nodes topology is not available, providing CPU topology
Feb 19 21:46:26 minikube kubelet[2538]: E0219 21:46:26.895688    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:46:31 minikube kubelet[2538]: E0219 21:46:31.898795    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:46:38 minikube kubelet[2538]: E0219 21:46:38.897804    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:46:39 minikube kubelet[2538]: E0219 21:46:39.896067    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"
Feb 19 21:46:44 minikube kubelet[2538]: E0219 21:46:44.899548    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-hq5qz" podUID="be60b495-e814-4c3b-a4c1-30cc7ca77a0c"
Feb 19 21:46:49 minikube kubelet[2538]: E0219 21:46:49.896813    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-r5pt7" podUID="fb1ec7cf-3b8e-434b-a667-6a4dcce46f6a"
Feb 19 21:46:53 minikube kubelet[2538]: E0219 21:46:53.895574    2538 pod_workers.go:1300] "Error syncing pod, skipping" err="failed to \"StartContainer\" for \"frontend-server\" with ImagePullBackOff: \"Back-off pulling image \\\"frontend:latest\\\"\"" pod="default/frontend-deployment-6dd9785f79-59zxc" podUID="74f31aad-7c61-46fe-bf37-7b0a9ea8ce13"

* 
* ==> kubernetes-dashboard [2a810e5fa7fa] <==
* 2024/02/19 21:36:39 [2024-02-19T21:36:39Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:40 [2024-02-19T21:36:40Z] Incoming HTTP/1.1 GET /api/v1/login/status request from 127.0.0.1: 
2024/02/19 21:36:40 [2024-02-19T21:36:40Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:40 [2024-02-19T21:36:40Z] Incoming HTTP/1.1 GET /api/v1/deployment/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:40 Getting list of all deployments in the cluster
2024/02/19 21:36:40 [2024-02-19T21:36:40Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:41 [2024-02-19T21:36:41Z] Incoming HTTP/1.1 GET /api/v1/login/status request from 127.0.0.1: 
2024/02/19 21:36:41 [2024-02-19T21:36:41Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:41 [2024-02-19T21:36:41Z] Incoming HTTP/1.1 GET /api/v1/daemonset/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:41 [2024-02-19T21:36:41Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Incoming HTTP/1.1 GET /api/v1/login/status request from 127.0.0.1: 
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:43 Getting list of all cron jobs in the cluster
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:36:43 Getting list of namespaces
2024/02/19 21:36:43 [2024-02-19T21:36:43Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:48 [2024-02-19T21:36:48Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:48 Getting list of all cron jobs in the cluster
2024/02/19 21:36:48 [2024-02-19T21:36:48Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:48 [2024-02-19T21:36:48Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:36:48 Getting list of namespaces
2024/02/19 21:36:48 [2024-02-19T21:36:48Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:53 [2024-02-19T21:36:53Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:53 Getting list of all cron jobs in the cluster
2024/02/19 21:36:53 [2024-02-19T21:36:53Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:53 [2024-02-19T21:36:53Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:36:53 Getting list of namespaces
2024/02/19 21:36:53 [2024-02-19T21:36:53Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:58 [2024-02-19T21:36:58Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:36:58 Getting list of all cron jobs in the cluster
2024/02/19 21:36:58 [2024-02-19T21:36:58Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:36:58 [2024-02-19T21:36:58Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:36:58 Getting list of namespaces
2024/02/19 21:36:58 [2024-02-19T21:36:58Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:03 [2024-02-19T21:37:03Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:37:03 Getting list of all cron jobs in the cluster
2024/02/19 21:37:03 [2024-02-19T21:37:03Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:03 [2024-02-19T21:37:03Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:37:03 Getting list of namespaces
2024/02/19 21:37:03 [2024-02-19T21:37:03Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:08 [2024-02-19T21:37:08Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:37:08 Getting list of all cron jobs in the cluster
2024/02/19 21:37:08 [2024-02-19T21:37:08Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:08 [2024-02-19T21:37:08Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:37:08 Getting list of namespaces
2024/02/19 21:37:08 [2024-02-19T21:37:08Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:13 [2024-02-19T21:37:13Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:37:13 Getting list of all cron jobs in the cluster
2024/02/19 21:37:13 [2024-02-19T21:37:13Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:13 [2024-02-19T21:37:13Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:37:13 Getting list of namespaces
2024/02/19 21:37:13 [2024-02-19T21:37:13Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:18 [2024-02-19T21:37:18Z] Incoming HTTP/1.1 GET /api/v1/namespace request from 127.0.0.1: 
2024/02/19 21:37:18 Getting list of namespaces
2024/02/19 21:37:18 [2024-02-19T21:37:18Z] Outcoming response to 127.0.0.1 with 200 status code
2024/02/19 21:37:18 [2024-02-19T21:37:18Z] Incoming HTTP/1.1 GET /api/v1/cronjob/default?itemsPerPage=10&page=1&sortBy=d,creationTimestamp request from 127.0.0.1: 
2024/02/19 21:37:18 Getting list of all cron jobs in the cluster
2024/02/19 21:37:18 [2024-02-19T21:37:18Z] Outcoming response to 127.0.0.1 with 200 status code

* 
* ==> storage-provisioner [1a871908a98c] <==
* I0219 20:52:01.135340       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
I0219 20:52:01.208752       1 storage_provisioner.go:141] Storage provisioner initialized, now starting service!
I0219 20:52:01.208831       1 leaderelection.go:243] attempting to acquire leader lease kube-system/k8s.io-minikube-hostpath...
I0219 20:52:01.232514       1 leaderelection.go:253] successfully acquired lease kube-system/k8s.io-minikube-hostpath
I0219 20:52:01.232943       1 controller.go:835] Starting provisioner controller k8s.io/minikube-hostpath_minikube_cb2ba0a7-decd-416f-a0a5-b7d1392caaed!
I0219 20:52:01.233618       1 event.go:282] Event(v1.ObjectReference{Kind:"Endpoints", Namespace:"kube-system", Name:"k8s.io-minikube-hostpath", UID:"ac8d840e-eb7b-4b5c-89ca-9b8be2a1bfd4", APIVersion:"v1", ResourceVersion:"456", FieldPath:""}): type: 'Normal' reason: 'LeaderElection' minikube_cb2ba0a7-decd-416f-a0a5-b7d1392caaed became leader
I0219 20:52:01.333663       1 controller.go:884] Started provisioner controller k8s.io/minikube-hostpath_minikube_cb2ba0a7-decd-416f-a0a5-b7d1392caaed!

* 
* ==> storage-provisioner [f94903b33aa3] <==
* I0219 20:51:38.839609       1 storage_provisioner.go:116] Initializing the minikube storage provisioner...
F0219 20:51:59.902870       1 main.go:39] error getting server version: Get "https://10.96.0.1:443/version?timeout=32s": dial tcp 10.96.0.1:443: connect: connection refused

